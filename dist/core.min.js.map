{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///core.min.js","webpack:///webpack/bootstrap 2ce0195f9bd3ddb07404","webpack:///external \"winston\"","webpack:///external \"q\"","webpack:///./src/exception/serviceException.ts","webpack:///./src/controller/baseController.ts","webpack:///./src/db/MySQL/centralizedMySQL.ts","webpack:///./src/db/MySQL/distributedMySQL.ts","webpack:///./src/domain/decorator/RESTEntity.ts","webpack:///./src/db/MySQL/MySQLDB.ts","webpack:///./src/db/PostgreSQLDB/centralizedPostgreSQL.ts","webpack:///./src/db/baseDB.ts","webpack:///./src/domain/entity/baseDomainObject.ts","webpack:///./src/domain/pagination/paginationResponse.ts","webpack:///./src/domain/repository/baseRepository.ts","webpack:///./src/util/apiService.ts","webpack:///./src/util/encryption.ts","webpack:///./src/util/tools.ts","webpack:///external \"crypto\"","webpack:///external \"jsonwebtoken\"","webpack:///./src/controller/main.ts","webpack:///./src/db/main.ts","webpack:///./src/domain/main.ts","webpack:///./src/service/main.ts","webpack:///./src/util/main.ts","webpack:///./src/controller/baseCRUDController.ts","webpack:///./src/controller/imageController.ts","webpack:///./src/db/MySQL/main.ts","webpack:///./src/db/PostgreSQLDB/PostgreSQLDB.ts","webpack:///./src/db/PostgreSQLDB/main.ts","webpack:///./src/domain/entity/baseUser.ts","webpack:///./src/domain/pagination/paginationRequest.ts","webpack:///./src/domain/repository/baseUserRepository.ts","webpack:///./src/index.ts","webpack:///./src/service/authenticate/impl/MySqlAuthenticationService.ts","webpack:///./src/service/authenticate/impl/PAMAuthenticationService.ts","webpack:///./src/service/impl/serviceFactoryImpl.ts","webpack:///./src/service/message/impl/EmailMessageService.ts","webpack:///./src/service/message/impl/JPushMessageService.ts","webpack:///./src/service/message/impl/SMSMessageService.ts","webpack:///./src/service/message/impl/WeChatMessageService.ts","webpack:///external \"express\"","webpack:///external \"mysql\"","webpack:///external \"pg\"","webpack:///external \"reflect-metadata\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_16__","__WEBPACK_EXTERNAL_MODULE_17__","__WEBPACK_EXTERNAL_MODULE_39__","__WEBPACK_EXTERNAL_MODULE_40__","__WEBPACK_EXTERNAL_MODULE_41__","__WEBPACK_EXTERNAL_MODULE_42__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","serviceException","_errCode","_error","errorMessage","errCode","exceptionConfig","getMsgByCode","message","statusCode","error","toString","code","messageConfig","_message","_statusCode","ERR_404","ERR_500","ERR_nologin","ERR_relogin","WARNING_authFail","ERR_401","ERR_DB","express","jwt","winston","Q","serviceException_1","apiService_1","baseController","router","Router","getRouter","checkAuthentication","req","res","next","_this","auth","config","global","verify","jwtSecKey","err","decoded","handleError","debug","JSON","stringify","getAuthentication","defer","reject","resolve","promise","getAuthenticationSync","url","callback","withAuth","apiService","getInstance","push","method","bind","post","put","delete","status","jsonp","e","stack","__extends","b","__","constructor","create","MySQLDB_1","centralizedMySQL","_super","info","_instance","Error","init","pool","createPool","centralizedDB","getPool","param","MySQLDB","tools_1","distributedMySQL","pools","distributedDBs","map","cfg","indicator","length","getDBByIndicator","dbHash","tools","getHash","RESTEntity","option","target","getTableName","table","getRESTUrl","URL","getDBType","db","exportable","Reflect","metadata","exportMetadataKey","getExportable","propertyKey","getMetadata","subQuery","subQueryMetadataKey","getSubQuery","Symbol","mysql","connectionLimit","host","database","user","password","dateStrings","query","sql","meid","rows","PostgreSQLDB_1","centralizedPostgreSQL","PostgreSQLDB","initDB","type","centralizedMySQL_1","distributedMySQL_1","centralizedPostgreSQL_1","dbType","baseDomainObject","paginationResponse","data","baseDB_1","RESTEntity_1","baseRepository","_domainObject","distributedDB","domainObject","getDomainObject","insert","objectToInsert","getDB","insertId","batchInsert","objectsToInsert","keys","forEach","values","key","join","affectedRows","queryByID","id","postProcess","then","listAll","all","update","objectToUpdate","removeID","result","updateAndRefresh","batchDelete","where","first","arg","getConditionKey","Array","apply","getConditionArg","search","searchLike","count","countAllLike","paginationRequest","searchAllColumn","trim","_i","_a","columns","column","queryAllLike","start","queryByCreateDate","startDate","endDate","distributed","centralized","domain","removeNotExportable","doSubQuery","subQuerys","this_1","handler_1","repository","subObject","getFields","getOwnPropertyNames","field","indexOf","result_1","first_1","substring","split","rxjs_1","apiSteam","Subject","add","transports","File","filename","json","maxsize","maxFiles","level","remove","Console","prettyPrint","colorize","silent","timestamp","Date","toLocaleString","console","log","subscribe","encryption","encryptMd5","toLowerCase","md5","crypto","createHash","digest","encryptRC4","content","cipher","algorithm_rc4","rc4_key","rc4_iv","decryptRC4","decipher","encryptAES128","algorithm_aes128","aes128_iv","decryptAES128","algorithm","algorithm_iv","getBuffer","cip","createCipheriv","encrypted","final","createDecipheriv","decrypted","cont","Buffer","isEmptyObject","obj","fillToLength","original","shex","dbCount","last","slice","isNaN","parseInt","getIpAddress","ipAddress","headers","forwardedIpsStr","connection","remoteAddress","socket","isErrorCountReset","first_time","minute","flag","getTime","generateRandomNumber","generateRandom","charsetNumber","charset","bf","randomBytes","index","readUInt8","charAt","baseController_1","baseCRUDController_1","baseCRUDController","imageController_1","imageController","__export","paginationResponse_1","_repository","initRouters","createCRUD","RESTUrl","params","isArray","body","insertID","create_date","changedRows","spread","total","filtered","recordsTotal","recordsFiltered","end","multer","uploadFolder","imagePath","storage","diskStorage","destination","file","cb","originalname","now","upload","single","success","pg","Pool","max","__decorate","decorators","desc","arguments","r","getOwnPropertyDescriptor","decorate","__metadata","k","v","baseDomainObject_1","baseUser","String","order","baseRepository_1","encryption_1","baseUserRepository","login","username","encryptedPassword","token","generateJWT","detail","changeNewPassword","newpassword","userid","psw","role","sign","expiresIn","jwtTimeout","MySqlAuthenticationService","userRepository","PAMAuthenticationService","JPushMessageService_1","PAMAuthenticationService_1","MySqlAuthenticationService_1","WeChatMessageService_1","SMSMessageService_1","EmailMessageService_1","serviceFactoryImpl","getMessageService","JPushMessageService","WeChatMessageService","SMSMessageService","EmailMessageService","getAuthenticationService","loginType","getConfig","_config","setConfig","pushMessage"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,WAAAA,QAAA,KAAAA,QAAA,UAAAA,QAAA,gBAAAA,QAAA,WAAAA,QAAA,SAAAA,QAAA,MAAAA,QAAA,qBACA,kBAAAC,gBAAAC,IACAD,OAAA,yFAAAJ,GACA,gBAAAC,SACAA,QAAA,KAAAD,EAAAG,QAAA,WAAAA,QAAA,KAAAA,QAAA,UAAAA,QAAA,gBAAAA,QAAA,WAAAA,QAAA,SAAAA,QAAA,MAAAA,QAAA,qBAEAJ,EAAA,KAAAC,EAAAD,EAAA,QAAAA,EAAA,EAAAA,EAAA,OAAAA,EAAA,aAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,GAAAA,EAAA,sBACCO,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAhB,OAGA,IAAAC,GAAAgB,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAnB,WAUA,OANAc,GAAAE,GAAAI,KAAAnB,EAAAD,QAAAC,IAAAD,QAAAe,GAGAd,EAAAkB,GAAA,EAGAlB,EAAAD,QAvBA,GAAAiB,KA+DA,OAnCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAG,EAAA,SAAAK,GAA2C,MAAAA,IAG3CR,EAAAS,EAAA,SAAAxB,EAAAyB,EAAAC,GACAX,EAAAY,EAAA3B,EAAAyB,IACAG,OAAAC,eAAA7B,EAAAyB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAX,EAAAkB,EAAA,SAAAhC,GACA,GAAAyB,GAAAzB,KAAAiC,WACA,WAA2B,MAAAjC,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAc,GAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDrB,EAAAwB,EAAA,GAGAxB,IAAAyB,EAAA,MDgBM,SAAUvC,EAAQD,GEhFxBC,EAAAD,QAAAE,QAAA,YFsFM,SAAUD,EAAQD,GGtFxBC,EAAAD,QAAAE,QAAA,MH4FM,SAAUD,EAAQD,EAASe,GAEjC,YIvFA,IAAA0B,GAAA,WAMI,QAAAA,GAAYC,EAAkBC,EAAcC,GACxCvC,KAAKwC,QAAUH,CACf,IAAII,GAAkBzC,KAAK0C,aAAaL,EACxCrC,MAAK2C,QAAUF,EAAgBE,QAC/B3C,KAAK4C,WAAaH,EAAgBG,WAC9BN,IACAtC,KAAK6C,MAAQP,EAAOQ,YAGpBP,IACAvC,KAAK2C,QAAUJ,GAY3B,MARIH,GAAAJ,UAAAU,aAAA,SAAaK,GACT,GAAIJ,GAAU,GAAIF,GAAgB,gBAAiB,IAInD,OAHIO,GAAcD,KACdJ,EAAUK,EAAcD,IAErBJ,GAGfP,IA5BazC,GAAAyC,kBA8Bb,IAAAK,GAAA,WAII,QAAAA,GAAYQ,EAAkBC,GAAA,SAAAA,MAAA,KAC1BlD,KAAK2C,QAAUM,EACfjD,KAAK4C,WAAaM,EAE1B,MAAAT,KARa9C,GAAA8C,iBAUb,IAAIO,IACAG,QAAS,GAAIV,GAAgB,qBAAsB,KACnDW,QAAS,GAAIX,GAAgB,gBAAiB,KAC9CY,YAAa,GAAIZ,GAAgB,iBAAkB,KACnDa,YAAa,GAAIb,GAAgB,iBAAkB,KACnDc,iBAAkB,GAAId,GAAgB,cAAe,KACrDe,QAAS,GAAIf,GAAgB,qBAAsB,KACnDgB,OAAQ,GAAIhB,GAAgB,oBAAqB,OJuF/C,SAAU7C,EAAQD,EAASe,GAEjC,YK5IA,IAAAgD,GAAAhD,EAAA,IACAiD,EAAAjD,EAAA,IACAkD,EAAAlD,EAAA,GACAmD,EAAAnD,EAAA,GACAoD,EAAApD,EAAA,GACAqD,EAAArD,EAAA,IAEAsD,EAAA,WAGI,QAAAA,KACIhE,KAAKiE,OAASP,EAAQQ,SAyG9B,MAnGWF,GAAAhC,UAAAmC,UAAP,WACI,MAAOnE,MAAKiE,QAIhBD,EAAAhC,UAAAoC,oBAAA,SAAoBC,EAAKC,EAAKC,GAA9B,GAAAC,GAAAxE,KACQyE,EAAOJ,EAAI1C,IAAI,MACnB,IAAK8C,EAGE,CACH,GAAIC,GAASC,OAAOD,MACpBf,GAAIiB,OAAOH,EAAMC,EAAOG,UAAW,SAACC,EAAKC,GACjCD,GACAlB,EAAQf,MAAMiC,EAAInC,SAClB6B,EAAKQ,YAAY,GAAIlB,GAAA1B,iBAAiB,cAAe0C,EAAInC,SAAU2B,KAEnEV,EAAQqB,MAAM,QAAUC,KAAKC,UAAUJ,GAAW,yBAClDR,WAVRX,GAAQf,MAAM,kCACd7C,KAAKgF,YAAY,GAAIlB,GAAA1B,iBAAiB,eAAgBkC,IAe9DN,EAAAhC,UAAAoD,kBAAA,SAAkBf,GACd,GAAIgB,GAAQxB,EAAEwB,QACVZ,EAAOJ,EAAI1C,IAAI,MACnB,IAAK8C,EAEE,CACH,GAAIC,GAASC,OAAOD,MACpBf,GAAIiB,OAAOH,EAAMC,EAAOG,UAAW,SAACC,EAAKC,GACjCD,EACAO,EAAMC,OAAO,GAAIxB,GAAA1B,iBAAiB,iBAElCwB,EAAQqB,MAAM,oBAAsBC,KAAKC,UAAUJ,GAAW,KAC9DM,EAAME,QAAQR,UARtBM,GAAMC,OAAO,GAAIxB,GAAA1B,iBAAiB,eAYtC,OAAOiD,GAAMG,SAGjBxB,EAAAhC,UAAAyD,sBAAA,SAAsBpB,GAClB,IACI,GAAII,GAAOJ,EAAI1C,IAAI,OACf+C,EAASC,OAAOD,MAEpB,OADcf,GAAIiB,OAAOH,EAAMC,EAAOG,WAExC,MAAOC,GACL,MAAO,QAKfd,EAAAhC,UAAAL,IAAA,SAAI+D,EAAaC,EAAoCC,GAAA,SAAAA,OAAA,GACjD7B,EAAA8B,WAAWC,cAAcC,MAAMC,OAAQ,MAAON,IAAKA,IAC/CE,EACA5F,KAAKiE,OAAOtC,IAAI+D,EAAK1F,KAAKoE,oBAAoB6B,KAAKjG,MAAO2F,GAE1D3F,KAAKiE,OAAOtC,IAAI+D,EAAKC,IAI7B3B,EAAAhC,UAAAkE,KAAA,SAAKR,EAAaC,EAAoCC,GAAA,SAAAA,OAAA,GAClD7B,EAAA8B,WAAWC,cAAcC,MAAMC,OAAQ,OAAQN,IAAKA,IAChDE,EACA5F,KAAKiE,OAAOiC,KAAKR,EAAK1F,KAAKoE,oBAAoB6B,KAAKjG,MAAO2F,GAE3D3F,KAAKiE,OAAOiC,KAAKR,EAAKC,IAI9B3B,EAAAhC,UAAAmE,IAAA,SAAIT,EAAaC,GACb5B,EAAA8B,WAAWC,cAAcC,MAAMC,OAAQ,MAAON,IAAKA,IACnD1F,KAAKiE,OAAOkC,IAAIT,EAAK1F,KAAKoE,oBAAoB6B,KAAKjG,MAAO2F,IAG9D3B,EAAAhC,UAAAoE,OAAA,SAAOV,EAAaC,GAChB5B,EAAA8B,WAAWC,cAAcC,MAAMC,OAAQ,SAAUN,IAAKA,IACtD1F,KAAKiE,OAAOmC,OAAOV,EAAK1F,KAAKoE,oBAAoB6B,KAAKjG,MAAO2F,IAIjE3B,EAAAhC,UAAAgD,YAAA,SAAYnC,EAAYyB,EAAKD,GACzB,IACIC,EAAI+B,OAAOxD,EAAMD,YAAY0D,MAAMzD,GACnCe,EAAQf,MAAM,gBAAgBqC,KAAKC,UAAUtC,IAC/C,MAAO0D,GACL3C,EAAQf,MAAM,wBAAwBA,EAAM2D,OAC5ClC,EAAI+B,OAAO,KAAKC,OACZ9D,QAAW,UACXG,QAAW,eACXC,WAAc,IACdC,MAAS,2BAKzBmB,IA7GsBrE,GAAAqE,kBL0PhB,SAAUpE,EAAQD,EAASe,GAEjC,YAEA,IAAI+F,GAAazG,MAAQA,KAAKyG,WAAc,SAAUtF,EAAGuF,GAErD,QAASC,KAAO3G,KAAK4G,YAAczF,EADnC,IAAK,GAAIe,KAAKwE,GAAOA,EAAEzE,eAAeC,KAAIf,EAAEe,GAAKwE,EAAExE,GAEnDf,GAAEa,UAAkB,OAAN0E,EAAanF,OAAOsF,OAAOH,IAAMC,EAAG3E,UAAY0E,EAAE1E,UAAW,GAAI2E,KMvQnF/C,EAAAlD,EAAA,GACAoG,EAAApG,EAAA,GAEAqG,EAAA,SAAAC,GAII,QAAAD,KAAA,GAAAvC,GACIwC,EAAAjG,KAAAf,OAAOA,IAEP,IADA4D,EAAQqD,KAAK,yBACTF,EAAiBG,UACjB,KAAM,IAAIC,OAAM,iENyQpB,OMvQAJ,GAAiBG,UAAY1C,ENuQtBA,EMtPf,MA3BsCiC,GAAAM,EAAAC,GAapBD,EAAAjB,YAAd,WACI,MAAOiB,GAAiBG,WAGrBH,EAAA/E,UAAAoF,KAAP,WACI,GAAI1C,GAAcC,OAAOD,MACzB1E,MAAKqH,KAAOrH,KAAKsH,WAAW5C,EAAO6C,cAAe,gBAItDR,EAAA/E,UAAAwF,QAAA,SAAQC,GAEJ,MADA7D,GAAQqB,MAAM,6BACPjF,KAAKqH,MAEpBN,GA3BsCD,EAAAY,QAEnBX,GAAAG,UAA8B,GAAIH,GAFxCpH,EAAAoH,oBNsSP,SAAUnH,EAAQD,EAASe,GAEjC,YAEA,IAAI+F,GAAazG,MAAQA,KAAKyG,WAAc,SAAUtF,EAAGuF,GAErD,QAASC,KAAO3G,KAAK4G,YAAczF,EADnC,IAAK,GAAIe,KAAKwE,GAAOA,EAAEzE,eAAeC,KAAIf,EAAEe,GAAKwE,EAAExE,GAEnDf,GAAEa,UAAkB,OAAN0E,EAAanF,OAAOsF,OAAOH,IAAMC,EAAG3E,UAAY0E,EAAE1E,UAAW,GAAI2E,KOhTnF/C,EAAAlD,EAAA,GACAiH,EAAAjH,EAAA,IACAoG,EAAApG,EAAA,GAEAkH,EAAA,SAAAZ,GAII,QAAAY,KAAA,GAAApD,GACIwC,EAAAjG,KAAAf,OAAOA,IAEP,IANJwE,EAAAqD,SAKIjE,EAAQqD,KAAK,yBACTW,EAAiBV,UACjB,KAAM,IAAIC,OAAM,iEPmTpB,OOjTAS,GAAiBV,UAAY1C,EPiTtBA,EO9Qf,MA7CsCiC,GAAAmB,EAAAZ,GAapBY,EAAA9B,YAAd,WACI,MAAO8B,GAAiBV,WAGrBU,EAAA5F,UAAAoF,KAAP,cAAA5C,GAAAxE,IACsB2E,QAAOD,OAClBoD,eAAeC,IAClB,SAAAC,GACIxD,EAAKqD,MAAM9B,KAAKvB,EAAK8C,WAAWU,EAAK,mBAMjDJ,EAAA5F,UAAAwF,QAAA,SAAQS,GAEJ,GAA0B,IAAtBjI,KAAK6H,MAAMK,OACX,MAAOlI,MAAK6H,MAAM,EAEtB,KAAKI,EAED,KADArE,GAAQf,MAAM,gFACR,GAAIsE,OAAM,yDAEpB,OAAOnH,MAAKmI,iBAAiBF,IAGjCL,EAAA5F,UAAAmG,iBAAA,SAAiBF,GACb,GAAIG,GAAST,EAAAU,MAAMC,QAAQL,EAE3B,OADArE,GAAQqB,MAAM,6BAA6BmD,EAAM,KAC1CpI,KAAK6H,MAAMO,IAG1BR,GA7CsCd,EAAAY,QAEnBE,GAAAV,UAA8B,GAAIU,GAFxCjI,EAAAiI,oBP8VP,SAAUhI,EAAQD,EAASe,GAEjC,YQzVA,SAAA6H,GAA2BC,GACvB,MAAO,UAAmBC,GACtBA,EAAOzG,UAAU0G,aAAe,WAAM,MAAAF,GAAOG,OAC7CF,EAAOzG,UAAU4G,WAAa,WAAM,MAAAJ,GAAOK,KAC3CJ,EAAOzG,UAAU8G,UAAY,WAAM,MAAAN,GAAOO,KAKlD,QAAAC,GAA2B9H,GACvB,MAAO+H,SAAQC,SAASC,EAAmBjI,GAG/C,QAAAkI,GAA8BX,EAAaY,GACvC,MAAOJ,SAAQK,YAAYH,EAAmBV,EAAQY,GAI1D,QAAAE,GAAyBrI,GACrB,MAAO+H,SAAQC,SAASM,EAAqBtI,GAGjD,QAAAuI,GAA4BhB,EAAaY,GACrC,MAAOJ,SAAQK,YAAYE,EAAqBf,EAAQY,GAlC5D,GAAMF,GAAoBO,OAAO,qBAC3BF,EAAsBE,OAAO,sBACnChJ,GAAA,IASAf,EAAA4I,aASA5I,EAAAqJ,aAIArJ,EAAAyJ,gBAKAzJ,EAAA4J,WAIA5J,EAAA8J,eRoWM,SAAU7J,EAAQD,EAASe,GAEjC,YSxYA,IAAAiJ,GAAAjJ,EAAA,IACAkD,EAAAlD,EAAA,GAEAoD,EAAApD,EAAA,GAEAgH,EAAA,mBAAAA,MAkCA,MAjCIA,GAAA1F,UAAAsF,WAAA,SAAWU,EAAK5G,GACZ,GAAIiG,GAAOsC,EAAMrC,YACbsC,gBAAiB5B,EAAI4B,gBACrBC,KAAM7B,EAAI6B,KACVC,SAAU9B,EAAI8B,SACdC,KAAM/B,EAAI+B,KACVC,SAAUhC,EAAIgC,SACdC,aAAa,GAGjB,OADArG,GAAQqB,MAAM,uBAAyB7D,EAAO,QAAU4G,EAAI6B,KAAO,aAC5DxC,GAOJK,EAAA1F,UAAAkI,MAAP,SAAaC,EAAa1C,EAAYpC,EAAwBM,EAA+ByE,GACzFxG,EAAQqB,MAAM,eAAiBkF,GAC/BvG,EAAQqB,MAAM,cAAgBC,KAAKC,UAAUsC,IAC7CzH,KAAKwH,QAAQ4C,GAAMF,MAAMC,EAAK1C,EAAO,SAAC3C,EAAKuF,GACnCvF,GACAlB,EAAQf,MAAM,sBAAwBsH,GACtCvG,EAAQf,MAAM,gBAAkBqC,KAAKC,UAAUsC,IAC/C7D,EAAQf,MAAMiC,EAAIhC,YAClBuC,EAAMC,OAAO,GAAIxB,GAAA1B,iBAAiB,SAAU0C,EAAIhC,cAE5C6C,GACAA,EAAS0E,MAK7B3C,IAlCsB/H,GAAA+H,WT+ahB,SAAU9H,EAAQD,EAASe,GAEjC,YAEA,IAAI+F,GAAazG,MAAQA,KAAKyG,WAAc,SAAUtF,EAAGuF,GAErD,QAASC,KAAO3G,KAAK4G,YAAczF,EADnC,IAAK,GAAIe,KAAKwE,GAAOA,EAAEzE,eAAeC,KAAIf,EAAEe,GAAKwE,EAAExE,GAEnDf,GAAEa,UAAkB,OAAN0E,EAAanF,OAAOsF,OAAOH,IAAMC,EAAG3E,UAAY0E,EAAE1E,UAAW,GAAI2E,KU1bnF/C,EAAAlD,EAAA,GACA4J,EAAA5J,EAAA,IAEA6J,EAAA,SAAAvD,GAII,QAAAuD,KAAA,GAAA/F,GACIwC,EAAAjG,KAAAf,OAAOA,IAEP,IADA4D,EAAQqD,KAAK,8BACTsD,EAAsBrD,UACtB,KAAM,IAAIC,OAAM,iEV4bpB,OU1bAoD,GAAsBrD,UAAY1C,EV0b3BA,EUzaf,MA3B2CiC,GAAA8D,EAAAvD,GAazBuD,EAAAzE,YAAd,WACI,MAAOyE,GAAsBrD,WAG1BqD,EAAAvI,UAAAoF,KAAP,WACI,GAAI1C,GAAcC,OAAOD,MACzB1E,MAAKqH,KAAOrH,KAAKsH,WAAW5C,EAAO6C,cAAe,gBAItDgD,EAAAvI,UAAAwF,QAAA,SAAQC,GAEJ,MADA7D,GAAQqB,MAAM,6BACPjF,KAAKqH,MAEpBkD,GA3B2CD,EAAAE,aAExBD,GAAArD,UAAmC,GAAIqD,GAF7C5K,EAAA4K,yBVydP,SAAU3K,EAAQD,EAASe,GAEjC,YW/cA,SAAA+J,GAAuBC,GACnB,OAAQA,GACJ,IAAK,QACDC,EAAA5D,iBAAiBjB,cAAcsB,OAC/BwD,EAAAhD,iBAAiB9B,cAAcsB,MACnC,KAAK,aACDyD,EAAAN,sBAAsBzE,cAAcsB,QAnBhD,GAAAuD,GAAAjK,EAAA,GACAkK,EAAAlK,EAAA,GACAmK,EAAAnK,EAAA,EAWAf,GAAA8K,UAUA,SAAYK,GACRA,IAAA,6BAAaA,IAAA,8BADLnL,EAAAmL,SAAAnL,EAAAmL,aX6dN,SAAUlL,EAAQD,EAASe,GAEjC,YYxfA,IAAAqK,GAAA,mBAAAA,MAiBA,MAZIA,GAAA/I,UAAA0G,aAAA,WACI,KAAM,IAAIvB,OAAM,8CAGpB4D,EAAA/I,UAAA4G,WAAA,WACI,KAAM,IAAIzB,OAAM,4CAGpB4D,EAAA/I,UAAA8G,UAAA,WACI,KAAM,IAAI3B,OAAM,0CAGxB4D,IAjBsBpL,GAAAoL,oBZ6gBhB,SAAUnL,EAAQD,EAASe,GAEjC,YahhBA,IAAAsK,GAAA,mBAAAA,KAGIhL,KAAAiL,QACJ,MAAAD,KAJarL,GAAAqL,sBb6hBP,SAAUpL,EAAQD,EAASe,GAEjC,Yc/hBA,IAAAmD,GAAAnD,EAAA,GAEAwK,EAAAxK,EAAA,GAEAyK,EAAAzK,EAAA,GACAiK,EAAAjK,EAAA,GACAkK,EAAAlK,EAAA,GACA0K,EAAA,WAKI,QAAAA,GAAsBC,GAAArL,KAAAqL,gBAHtBrL,KAAAuH,cAAkCoD,EAAA5D,iBAAiBjB,cACnD9F,KAAAsL,cAAkCV,EAAAhD,iBAAiB9B,cAG/C9F,KAAKuL,aAAe,GAAIvL,MAAKqL,cA8YrC,MA3YID,GAAApJ,UAAAwJ,gBAAA,WACI,MAAOxL,MAAKuL,cAGhBH,EAAApJ,UAAAyJ,OAAA,SAAOC,EAAmBzD,GACtB,GAAI5C,GAAQxB,EAAEwB,OASd,OARSrF,MAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACC,eAAiBlK,KAAKuL,aAAa7C,eAAiB,SACpDgD,EACArG,EACA,SAACgF,GACGhF,EAAME,QAAQ8E,EAAKuB,WACpB3D,GACA5C,EAAMG,SAGjB4F,EAAApJ,UAAA6J,YAAA,SAAYC,EAAsB7D,GAC9B,GAAI5C,GAAQxB,EAAEwB,QACV0D,EAAK/I,KAAK2L,MAAM3L,KAAKuL,aAAazC,aAClCiD,EAAOxK,OAAOwK,KAAKD,EAAgB,IACnCb,IAiBJ,OAhBAa,GAAgBE,QACZ,SAACT,GACG,GAAIU,KACJF,GAAKhE,IAAI,SAACmE,GACND,EAAOlG,KAAKwF,EAAaW,MAE7BjB,EAAKlF,KAAKkG,KAGlBlD,EAAGmB,MACC,eAAiBlK,KAAKuL,aAAa7C,eAAiB,KAAOqD,EAAKI,OAAS,cACxElB,GACD5F,EACA,SAACgF,GACGhF,EAAME,QAAQ8E,EAAK+B,eACpBnE,GACA5C,EAAMG,SAGjB4F,EAAApJ,UAAAqK,UAAA,SAAUC,EAAYC,EAA6BtE,GAAnD,GAAAzD,GAAAxE,IAAsB,UAAAuM,OAAA,EAClB,IAAIlH,GAAQxB,EAAEwB,OAkBd,OAjBSrF,MAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACC,iBAAmBlK,KAAKuL,aAAa7C,eAAiB,eACrD4D,GACDjH,EACA,SAACgF,GACuB,IAAhBA,EAAKnC,OACL7C,EAAME,QAAQ,MAEVgH,EACA/H,EAAK+H,YAAelC,EAAK,IAAImC,KAAKnH,EAAME,SAExCF,EAAME,QAAW8E,EAAK,KAG/BpC,GAEA5C,EAAMG,SAGjB4F,EAAApJ,UAAAyK,QAAA,SAAQF,EAA6BtE,GAArC,GAAAzD,GAAAxE,IAAQ,UAAAuM,OAAA,EACJ,IAAIlH,GAAQxB,EAAEwB,OAgBd,OAfSrF,MAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACC,iBAAmBlK,KAAKuL,aAAa7C,eAAiB,wBAEtDrD,EACA,SAACgF,GACOkC,EACA1I,EAAE6I,IAAOrC,EAAKtC,IAAIvD,EAAK+H,YAAYtG,KAAKzB,KAAQgI,KAAK,SAAAP,GACjD5G,EAAME,QAAQ8E,KAGlBhF,EAAME,QAAQ8E,IAEnBpC,GAEA5C,EAAMG,SAGjB4F,EAAApJ,UAAA2K,OAAA,SAAOC,EAAqBN,EAAYrE,GACpC,GAAI5C,GAAQxB,EAAEwB,OAUd,OATSrF,MAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACC,UAAYlK,KAAKuL,aAAa7C,eAAiB,qBAC9C1I,KAAK6M,SAASD,GAAiBN,GAChCjH,EACA,SAACyH,GACGzH,EAAME,QAAQuH,EAAOV,eACtBnE,GAEA5C,EAAMG,SAIjB4F,EAAApJ,UAAA+K,iBAAA,SAAiBH,EAAqBN,EAAYrE,GAAlD,GAAAzD,GAAAxE,IACI,OAAOA,MAAK2M,OAAOC,EAAgBN,EAAIrE,GAAWuE,KAC9C,WACI,MAAOhI,GAAK6H,UAAUC,GAAI,EAAMrE,MAM5CmD,EAAApJ,UAAAoE,OAAA,SAAOkG,EAAYrE,GACf,GAAI5C,GAAQxB,EAAEwB,OAUd,OATSrF,MAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACC,eAAiBlK,KAAKuL,aAAa7C,eAAiB,eACnD4D,GACDjH,EACA,SAACyH,GACGzH,EAAME,QAAQuH,EAAOV,eACtBnE,GAEA5C,EAAMG,SAGjB4F,EAAApJ,UAAAgL,YAAA,SAAY9C,EAAOjC,GAAnB,GAAAzD,GAAAxE,KACQqF,EAAQxB,EAAEwB,QACV4H,EAAQ,IACRC,GAAQ,EACRC,IAmBJ,OAlBA5L,QAAOwK,KAAK7B,GAAO8B,QAAQ,SAACE,GACpBgB,GACAD,GAAS,UAAYf,EAAM1H,EAAK4I,gBAAgBlD,EAAMgC,IACtDgB,GAAQ,GAERD,GAAS,QAAUf,EAAM1H,EAAK4I,gBAAgBlD,EAAMgC,IAExDmB,MAAMrL,UAAU+D,KAAKuH,MAAMH,EAAK3I,EAAK+I,gBAAgBrD,EAAMgC,OAEtDlM,KAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACC,eAAiBlK,KAAKuL,aAAa7C,eAAiBuE,EACpDE,EACA9H,EACA,SAACyH,GACGzH,EAAME,QAAQuH,EAAOV,eACtBnE,GAEA5C,EAAMG,SAGjB4F,EAAApJ,UAAAwL,OAAA,SAAOtD,EAAOjC,GAAd,GAAAzD,GAAAxE,KACQqF,EAAQxB,EAAEwB,QACV4H,EAAQ,IACRC,GAAQ,EACRC,IAqBJ,OApBA5L,QAAOwK,KAAK7B,GAAO8B,QAAQ,SAACE,GACpBgB,GACAD,GAAS,UAAYf,EAAM1H,EAAK4I,gBAAgBlD,EAAMgC,IACtDgB,GAAQ,GAERD,GAAS,QAAUf,EAAM1H,EAAK4I,gBAAgBlD,EAAMgC,IAExDmB,MAAMrL,UAAU+D,KAAKuH,MAAMH,EAAK3I,EAAK+I,gBAAgBrD,EAAMgC,OAEtDlM,KAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACC,iBAAmBlK,KAAKuL,aAAa7C,eAAiBuE,EAAQ,qBAC9DE,EACA9H,EACA,SAACgF,GACGxG,EAAE6I,IAAOrC,EAAKtC,IAAIvD,EAAK+H,YAAYtG,KAAKzB,KAAQgI,KAAK,WACjDnH,EAAME,QAAQ8E,MAEnBpC,GAEA5C,EAAMG,SAGjB4F,EAAApJ,UAAAyL,WAAA,SAAWvD,EAAOjC,GAAlB,GAAAzD,GAAAxE,KACQqF,EAAQxB,EAAEwB,QACV4H,EAAQ,IACRC,GAAQ,EACRC,IAqBJ,OApBA5L,QAAOwK,KAAK7B,GAAO8B,QAAQ,SAACE,GACpBgB,GACAD,GAAS,UAAYf,EAAM,WAC3BgB,GAAQ,GAERD,GAAS,QAAUf,EAAM,WAE7BiB,EAAIpH,KAAK,IAAMmE,EAAMgC,GAAO,OAEvBlM,KAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACC,iBAAmBlK,KAAKuL,aAAa7C,eAAiBuE,EAAQ,qBAC9DE,EACA9H,EACA,SAACgF,GACGxG,EAAE6I,IAAOrC,EAAKtC,IAAIvD,EAAK+H,YAAYtG,KAAKzB,KAAQgI,KAAK,WACjDnH,EAAME,QAAQ8E,MAEnBpC,GAEA5C,EAAMG,SAGjB4F,EAAApJ,UAAA0L,MAAA,SAAMzF,GACF,GAAI5C,GAAQxB,EAAEwB,OAUd,OATSrF,MAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACC,iCAAmClK,KAAKuL,aAAa7C,kBAErDrD,EACA,SAACyH,GACGzH,EAAME,QAAQuH,EAAO,KACtB7E,GAEA5C,EAAMG,SAGjB4F,EAAApJ,UAAA2L,aAAA,SAAaC,EAAsC3F,GAC/C,GAAI5C,GAAQxB,EAAEwB,QACV0D,EAAK/I,KAAK2L,MAAM3L,KAAKuL,aAAazC,aAElCqE,KACAF,EAAQ,EAGZ,IAAIW,EAAkBC,iBAAmBD,EAAkBC,gBAAgBC,OAAO5F,OAAS,EAAG,CAC1F+E,EAAQ,UAER,KAAmB,GADfC,IAAQ,EACOa,EAAA,EAAAC,EAAAJ,EAAkBK,QAAlBF,EAAAC,EAAA9F,OAAA6F,IAAyB,CAAvC,GAAIG,GAAMF,EAAAD,EACPb,IACAA,GAAQ,EACRD,GAASiB,EAAO9M,KAAO,WAEvB6L,GAAS,OAASiB,EAAO9M,KAAO,UAEpC+L,EAAIpH,KAAK,IAAM6H,EAAkBC,gBAAkB,KAEvDZ,GAAS,KAWb,MARAlE,GAAGmB,MACC,iCAAmClK,KAAKuL,aAAa7C,eAAiBuE,EACtEE,EACA9H,EACA,SAACyH,GACGzH,EAAME,QAAQuH,EAAO,KACtB7E,GAEA5C,EAAMG,SAGjB4F,EAAApJ,UAAAmM,aAAA,SAAaP,EAAsC3F,GAAnD,GAAAzD,GAAAxE,KACQqF,EAAQxB,EAAEwB,QACV0D,EAAK/I,KAAK2L,MAAM3L,KAAKuL,aAAazC,aAElCqE,KACAF,EAAQ,EAGZ,IAAIW,EAAkBC,iBAAmBD,EAAkBC,gBAAgBC,OAAO5F,OAAS,EAAG,CAC1F+E,EAAQ,UAER,KAAmB,GADfC,IAAQ,EACOa,EAAA,EAAAC,EAAAJ,EAAkBK,QAAlBF,EAAAC,EAAA9F,OAAA6F,IAAyB,CAAvC,GAAIG,GAAMF,EAAAD,EACPb,IACAA,GAAQ,EACRD,GAASiB,EAAO9M,KAAO,WAEvB6L,GAAS,OAASiB,EAAO9M,KAAO,UAEpC+L,EAAIpH,KAAK,IAAM6H,EAAkBC,gBAAkB,KAEvDZ,GAAS,KAeb,MAZAE,GAAIpH,KAAK6H,EAAkBQ,OAC3BjB,EAAIpH,KAAK6H,EAAkB1F,QAC3Ba,EAAGmB,MACC,iBAAmBlK,KAAKuL,aAAa7C,eAAiBuE,EAAQ,+BAC9DE,EACA9H,EACA,SAACgF,GACGxG,EAAE6I,IAAOrC,EAAKtC,IAAIvD,EAAK+H,YAAYtG,KAAKzB,KAAQgI,KAAK,WACjDnH,EAAME,QAAQ8E,MAEnBpC,GAEA5C,EAAMG,SAGjB4F,EAAApJ,UAAAqM,kBAAA,SAAkBC,EAAiBC,GAC/B,GAAIlJ,GAAQxB,EAAEwB,OAUd,OATWrF,MAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACD,iBAAmBlK,KAAKuL,aAAa7C,eAAiB,wDACrD4F,EAAWC,GACZlJ,EACA,SAACgF,GACGhF,EAAME,QAAQ8E,KAGfhF,EAAMG,SAIP4F,EAAApJ,UAAA2J,MAAV,SAAgBjB,GACZ,MAAIA,KAASQ,EAAAJ,OAAO0D,YACTxO,KAAKsL,cACLZ,IAASQ,EAAAJ,OAAO2D,YAChBzO,KAAKuH,cADT,QAMX6D,EAAApJ,UAAA6K,SAAA,SAASD,GAIL,MAHIA,GAAeN,UACRM,GAAeN,GAEnBM,GAKXxB,EAAApJ,UAAAuK,YAAA,SAAYmC,GACR,MAAO7K,GAAE6I,KAAK1M,KAAK2O,oBAAoBD,GAAS1O,KAAK4O,WAAWF,KAAUlC,KAAK,WAAM,MAAAkC,MAGzFtD,EAAApJ,UAAA4M,WAAA,SAAWF,GACP,GAAIrJ,GAAQxB,EAAEwB,QACVwJ,Kd0dAC,EAAS9O,Iczdb,KAAK,GAAIkM,KAAOwC,Id8cF,Sc9cLxC,GACL,GAAIf,EAAA1B,YAAYqF,EAAKvD,aAAcW,GAAM,CACrC,GAAI6C,GAAU5D,EAAA1B,YAAYqF,EAAKvD,aAAcW,EACzCwC,GAAOxC,IACP2C,EAAU9I,KAAKgJ,EAAQC,WAAWlJ,cAAcuG,UAAUqC,EAAOxC,IAAMM,KACnE,SAAAyC,GAEI,MADAP,GAAOK,EAAQ3N,MAAQ6N,EAChBP,OAPlBxC,EAcT,OADArI,GAAE6I,IAAImC,GAAWrC,KAAK,WAAM,MAAAnH,GAAME,QAAQmJ,KACnCrJ,EAAMG,SAIjB4F,EAAApJ,UAAA2M,oBAAA,SAAoBD,GAChB,GAAIrJ,GAAQxB,EAAEwB,OACd,KAAK,GAAI6G,KAAOwC,GACRvD,EAAA/B,cAAcpJ,KAAKuL,aAAcW,MAAS,SACnCwC,GAAOxC,EAItB,OADA7G,GAAME,QAAQmJ,GACPrJ,EAAMG,SAGjB4F,EAAApJ,UAAAkN,UAAA,SAAUxD,GACN,GAAIoB,KAKJ,OAJAvL,QAAO4N,oBAAoBzD,GACtBM,QAAQ,SAACoD,GACNtC,EAAO/G,KAAKqJ,KAEbtC,GAGX1B,EAAApJ,UAAAoL,gBAAA,SAAgBlD,GACZ,GAAIA,EAAMpH,WAAWuM,QAAQ,MAAQ,EAAG,CACpC,GAAIC,GAAS,QACTC,GAAQ,CAWZ,OAVArF,GAAMsF,UAAUtF,EAAMmF,QAAQ,KAAO,EAAGnF,EAAMhC,OAAS,GAAGuH,MAAM,KAAKzD,QACjE,WACQuD,GACAD,GAAU,IACVC,GAAQ,GAERD,GAAU,OAIfA,EAAS,KAEhB,MAAO,OAIflE,EAAApJ,UAAAuL,gBAAA,SAAgBrD,GACZ,GAAqC,GAAjCA,EAAMpH,WAAWuM,QAAQ,KAAW,CAEpC,MADQnF,GAAMsF,UAAUtF,EAAMmF,QAAQ,KAAO,EAAGnF,EAAMhC,OAAS,GACtDuH,MAAM,KAEf,OAAQvF,IAGpBkB,IApZsBzL,GAAAyL,kBdu2BhB,SAAUxL,EAAQD,EAASe,GAEjC,Ye/2BA,IAAAgP,GAAAhP,GAAA,cAAA6F,GAAA,GAAAY,OAAA,6CAAAZ,GAAAxD,KAAA,mBAAAwD,MACA3C,EAAAlD,EAAA,GAEAmF,EAAA,WASI,QAAAA,KARA7F,KAAA2P,SAAW,GAAID,GAAAE,OAUX,KACIhM,EAAQiM,IAAIjM,EAAQkM,WAAWC,MAC3BC,SAAU,aACVC,MAAM,EACNC,QAAS,IACTC,SAAU,GACVC,MAAO,UAEXxM,EAAQyM,OAAOzM,EAAQkM,WAAWQ,SAClC1M,EAAQiM,IAAIjM,EAAQkM,WAAWQ,SAC3BC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,UAAW,WACP,OAAO,GAAIC,OAAOC,kBAEtBR,MAAO,UAEb,MAAO7J,GACLsK,QAAQC,IAAI,sBAAsBvK,GAGtC,GADA3C,EAAQqD,KAAK,oBACTpB,EAAWqB,UACX,KAAM,IAAIC,OAAM,iEAEpBtB,GAAWqB,UAAYlH,KAEvBA,KAAK2P,SAASoB,UACV,SAAA9J,GACIrD,EAAQqB,MAAM,wBAAwBgC,EAAKjB,OAAM,SAASiB,EAAKvB,OAS/E,MA5CkBG,GAAAC,YAAd,WACI,MAAOD,GAAWqB,WAuCtBrB,EAAA7D,UAAA+D,KAAA,SAAKkB,GACDjH,KAAK2P,SAASpL,KAAK0C,IAG3BpB,IA9CmBA,GAAAqB,UAAwB,GAAIrB,GAHlClG,EAAAkG,cfg6BP,SAAUjG,EAAQD,EAASe,GAEjC,cgBr6BA,SAAiBsQ,GAMb,QAAAC,GAA2B9O,GACvBA,EAAIA,EAAE+O,cAAcpD,MACpB,IAAIqD,GAAMC,EAAOC,WAAW,MAE5B,OADAF,GAAIxE,OAAOxK,GACJgP,EAAIG,OAAO,OAGtB,QAAAC,GAA2BC,GACvB,GAAI9M,GAASC,OAAOD,MACpB,OAAO+M,GAAOC,EAAehN,EAAOiN,QAASH,EAAS9M,EAAOkN,QAGjE,QAAAC,GAA2BL,GACvB,GAAI9M,GAASC,OAAOD,MACpB,OAAOoN,GAASJ,EAAehN,EAAOiN,QAASH,EAAS9M,EAAOkN,QAGnE,QAAAG,GAA8B7F,EAAmBsF,GAC7C,GAAI9M,GAASC,OAAOD,MACpB,OAAO+M,GAAOO,EAAkB9F,EAAKsF,EAAS9M,EAAOuN,WAGzD,QAAAC,GAA8BhG,EAAmBsF,GAC7C,GAAI9M,GAASC,OAAOD,MACpB,OAAOoN,GAASE,EAAkB9F,EAAKsF,EAAS9M,EAAOuN,WAG3D,QAAAR,GAAgBU,EAAWjG,EAAmBsF,EAAuBY,GACjElG,EAAMmG,EAAUnG,GAChBsF,EAAUa,EAAUb,EACpB,IAAIc,GAAMlB,EAAOmB,eAAeJ,EAAWjG,EAAKkG,GAC5CI,EAAYF,EAAI3F,OAAO6E,EAAS,MAAO,MAE3C,OADAgB,IAAaF,EAAIG,MAAM,OAChBD,EAAU1P,SAAS,OAG9B,QAAAgP,GAAkBK,EAAWjG,EAAKsF,EAASY,GACvClG,EAAMmG,EAAUnG,GAChBsF,EAAUa,EAAUb,EACpB,IAAIM,GAAWV,EAAOsB,iBAAiBP,EAAWjG,EAAKkG,GACnDO,EAAYb,EAASnF,OAAO6E,EAAS,MAAO,MAEhD,OADAmB,IAAab,EAASW,MAAM,OACrBE,EAAU7P,SAAS,OAG9B,QAAAuP,GAAmBO,GACf,MAAIA,aAAgBC,QACTD,EAEA,GAAIC,QAAOD,EAAM,OAtDhC,GAAIxB,GAAS1Q,EAAQ,IAEjBsR,EAAmB,SACnBN,EAAgB,KAEJV,GAAAC,WAAUA,EAOVD,EAAAO,WAAUA,EAKVP,EAAAa,WAAUA,EAKVb,EAAAe,cAAaA,EAKbf,EAAAkB,cAAaA,GA5BhBvS,EAAAqR,aAAArR,EAAAqR,iBhBo+BX,SAAUpR,EAAQD,EAASe,GAEjC,YiBv+BA,IAAI0Q,GAAS1Q,EAAQ,KAErB,SAAiB2H,GAGb,QAAAyK,GAA8BC,GAC1B,IAAK,GAAI7G,KAAO6G,GACZ,OAAO,CAEX,QAAO,EAGX,QAAAC,GAA6BC,EAAU/K,GACnC,GAAIgL,GAAOD,EAAWA,EAASnQ,SAAS,IAAM,EAE9C,IAAIoQ,EAAKhL,OAAkB,EAATA,EACd,KAAM,IAAIf,OAAM,0CAA4C8L,EAAW,aAAe/K,EAG1F,MAAOgL,EAAKhL,OAAkB,EAATA,GACjBgL,EAAO,IAAMA,CAEjB,OAAOA,GAGX,QAAA5K,GAAwBL,GACpB,GAAIvD,GAASC,OAAOD,OAChByO,EAAiBzO,EAAOoD,eAAeI,OACvCkL,EAAOnL,EAAUoL,OAAO,EAC5B,OAAIC,OAAMC,SAASH,EAAK,KACb,EAEKA,EAAK,GAAKD,EAI9B,QAAAK,GAA6BnP,GACzB,GAAIoP,GACAC,EAAUrP,EAAIqP,QACdC,EAAkBD,EAAQ,kBAO9B,OANkBD,GAAlBE,EAA8BA,EAA8B,KACvDF,IACDA,EAAYpP,EAAIuP,WAAWC,eACvBxP,EAAIyP,OAAOD,eACXxP,EAAIuP,WAAWE,OAAOD,eAEvBJ,EAGX,QAAAM,GAAkCC,EAAgBC,GAC9C,GAAIC,IAAO,CAKX,QAJkB,GAAIvD,OAAOwD,UAAYH,EAAWG,UACjC,IAAYF,IAC3BC,GAAO,GAEJA,EAGX,QAAAE,GAAqClM,GACjC,MAAOmM,GAAenM,EAAQoM,GAGlC,QAAAD,GAAwBnM,EAAeqM,GAEnC,IADA,GAAIzH,GAAS,GACNA,EAAO5E,OAASA,GAAQ,CAC3B,GAAIsM,GAAE,MACN,KACIA,EAAKpD,EAAOqD,YAAYvM,GAE5B,MAAO3B,GACH,SAEJ,IAAK,GAAI1F,GAAI,EAAGA,EAAI2T,EAAGtM,OAAQrH,IAAK,CAChC,GAAI6T,GAAQF,EAAGG,UAAU9T,GAAK0T,EAAQrM,MACtC4E,IAAUyH,EAAQK,OAAOF,IAIjC,MAAO5H,GA3EX,GAAMwH,GAAgB,YAENjM,GAAAyK,cAAaA,EAObzK,EAAA2K,aAAYA,EAaZ3K,EAAAC,QAAOA,EAWPD,EAAAmL,aAAYA,EAaZnL,EAAA0L,kBAAiBA,EASjB1L,EAAA+L,qBAAoBA,GAxDvBzU,EAAA0I,QAAA1I,EAAA0I,YjByjCX,SAAUzI,EAAQD,GkB9jCxBC,EAAAD,QAAAE,QAAA,WlBokCM,SAAUD,EAAQD,GmBpkCxBC,EAAAD,QAAAE,QAAA,iBnB0kCM,SAAUD,EAAQD,EAASe,GAEjC,YoBxkCA,IAAAmU,GAAAnU,EAAA,EAAQf,GAAAqE,eAAA6Q,EAAA7Q,cACR,IAAA8Q,GAAApU,EAAA,GAAQf,GAAAoV,mBAAAD,EAAAC,kBACR,IAAAC,GAAAtU,EAAA,GAAQf,GAAAsV,gBAAAD,EAAAC,iBpBklCF,SAAUrV,EAAQD,EAASe,GAEjC,YAEA,SAASwU,GAASlU,GACd,IAAK,GAAIkB,KAAKlB,GAAQrB,EAAQsC,eAAeC,KAAIvC,EAAQuC,GAAKlB,EAAEkB,IqBzlCpE,GAAAgJ,GAAAxK,EAAA,EAAgBf,GAAAmL,OAAAI,EAAAJ,OAAQnL,EAAA8K,OAAAS,EAAAT,OACxByK,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,MrBkmCM,SAAUd,EAAQD,EAASe,GAEjC,YAEA,SAASwU,GAASlU,GACd,IAAK,GAAIkB,KAAKlB,GAAQrB,EAAQsC,eAAeC,KAAIvC,EAAQuC,GAAKlB,EAAEkB,IsBzmCpEgT,EAAAxU,EAAA,IACAwU,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,KAGAwU,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,MtB8mCM,SAAUd,EAAQD,EAASe,GAEjC,cAEA,SAAkBM,GACd,IAAK,GAAIkB,KAAKlB,GAAQrB,EAAQsC,eAAeC,KAAIvC,EAAQuC,GAAKlB,EAAEkB,KuB1nCpExB,EAAA,MvBioCM,SAAUd,EAAQD,EAASe,GAEjC,YAEA,SAASwU,GAASlU,GACd,IAAK,GAAIkB,KAAKlB,GAAQrB,EAAQsC,eAAeC,KAAIvC,EAAQuC,GAAKlB,EAAEkB,IwBxoCpEgT,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,MxB+oCM,SAAUd,EAAQD,EAASe,GAEjC,YAEA,IAAI+F,GAAazG,MAAQA,KAAKyG,WAAc,SAAUtF,EAAGuF,GAErD,QAASC,KAAO3G,KAAK4G,YAAczF,EADnC,IAAK,GAAIe,KAAKwE,GAAOA,EAAEzE,eAAeC,KAAIf,EAAEe,GAAKwE,EAAExE,GAEnDf,GAAEa,UAAkB,OAAN0E,EAAanF,OAAOsF,OAAOH,IAAMC,EAAG3E,UAAY0E,EAAE1E,UAAW,GAAI2E,KyBvpCnFkO,EAAAnU,EAAA,GAIAyU,EAAAzU,EAAA,IACAmD,EAAAnD,EAAA,GAEAqU,EAAA,SAAA/N,GAGI,QAAA+N,GAAsB1J,EAAyB+J,GAA/C,GAAA5Q,GACIwC,EAAAjG,KAAAf,OAAOA,IzB0pCP,OyB3pCkBwE,GAAA6G,gBAAyB7G,EAAA4Q,cAE3C5Q,EAAKwK,WAAaoG,EAAYtP,cAE9BtB,EAAK6Q,cACL7Q,EAAK8Q,azBspCE9Q,EyB/iCf,MA/G0GiC,GAAAsO,EAAA/N,GAYtG+N,EAAA/S,UAAAsT,WAAA,cAAA9Q,GAAAxE,KACQuL,EAAe,GAAIvL,MAAKqL,cACxBkK,EAAUhK,EAAa3C,YAG3B5I,MAAK2B,IAAI4T,EAAS,SAAClR,EAAKC,EAAKC,GACzBC,EAAKwK,WAAWvC,UAAUD,KACtB,SAACnC,GAAS,MAAA/F,GAAI+B,OAAO,KAAKC,MAAM+D,IAChC,SAACxH,GAAU,MAAA2B,GAAKQ,YAAYnC,EAAOyB,OAI3CtE,KAAK2B,IAAI4T,EAAU,UAAW,SAAClR,EAAKC,EAAKC,GACrCC,EAAKwK,WAAWxB,OAAOnJ,EAAI6F,OAAOsC,KAC9B,SAACnC,GAAS,MAAA/F,GAAI+B,OAAO,KAAKC,MAAM+D,IAChC,SAACxH,GAAU,MAAA2B,GAAKQ,YAAYnC,EAAOyB,OAK3CtE,KAAK2B,IAAI4T,EAAU,eAAgB,SAAClR,EAAKC,EAAKC,GAC1CC,EAAKwK,WAAWvB,WAAWpJ,EAAI6F,OAAOsC,KAClC,SAACnC,GAAS,MAAA/F,GAAI+B,OAAO,KAAKC,MAAM+D,IAChC,SAACxH,GAAU,MAAA2B,GAAKQ,YAAYnC,EAAOyB,OAI3CtE,KAAK2B,IAAI4T,EAAU,eAAgB,SAAClR,EAAKC,EAAKC,GAC1CC,EAAKwK,WACAX,kBAAkBhK,EAAI6F,MAAMoE,UAAWjK,EAAI6F,MAAMqE,SACjD/B,KACG,SAACM,GAAW,MAAAxI,GAAI+B,OAAO,KAAKC,MAAMwG,IAClC,SAACjK,GAAU,MAAA2B,GAAKQ,YAAYnC,EAAOyB,OAK/CtE,KAAK2B,IAAI4T,EAAU,OAAQ,SAAClR,EAAKC,EAAKC,GAClCC,EAAKwK,WAAW3C,UAAUhI,EAAImR,OAAOlJ,IAAIE,KACrC,SAACM,GACOA,EACAxI,EAAI+B,OAAO,KAAKC,MAAMwG,GAEtBxI,EAAI+B,OAAO,KAAKC,WAGxB,SAACzD,GAAU,MAAA2B,GAAKQ,YAAYnC,EAAOyB,OAI3CtE,KAAKkG,KAAKqP,EAAS,SAAClR,EAAKC,EAAKC,GACtB8I,MAAMoI,QAAQpR,EAAIqR,MAClBlR,EAAKwK,WAAWnD,YAAYxH,EAAIqR,MAAMlJ,KAClC,SAACmJ,GAAa,MAAArR,GAAI+B,OAAO,KAAKC,OAAO8F,aAAcuJ,KACnD,SAAC9S,GAAU,MAAA2B,GAAKQ,YAAYnC,EAAOyB,MAGvCD,EAAIqR,KAAKE,YAAc,GAAIjF,MAC3BnM,EAAKwK,WAAWvD,OAAOpH,EAAIqR,MACtBlJ,KACG,SAACmJ,GAAa,MAAArR,GAAI+B,OAAO,KAAKC,OAAOgG,GAAIqJ,KACzC,SAAC9S,GAAU,MAAA2B,GAAKQ,YAAYnC,EAAOyB,QAKnDtE,KAAKmG,IAAIoP,EAAU,OAAQ,SAAClR,EAAKC,EAAKC,GAClCC,EAAKwK,WAAWrC,OAAOtI,EAAIqR,KAAMrR,EAAImR,OAAOlJ,IAAIE,KAC5C,SAACqJ,GAAgB,MAAAvR,GAAI+B,OAAO,KAAKC,OAAO8F,aAAcyJ,KACtD,SAAChT,GAAU,MAAA2B,GAAKQ,YAAYnC,EAAOyB,OAI3CtE,KAAKoG,OAAOmP,EAAU,OAAQ,SAAClR,EAAKC,EAAKC,GACrCC,EAAKwK,WAAW5I,OAAO/B,EAAImR,OAAOlJ,IAAIE,KAClC,SAACqJ,GAAgB,MAAAvR,GAAI+B,OAAO,KAAKC,OAAO8F,aAAcyJ,KACtD,SAAChT,GAAU,MAAA2B,GAAKQ,YAAYnC,EAAOyB,OAI3CtE,KAAKkG,KAAKqP,EAAU,cAAe,SAAClR,EAAKC,EAAKC,GAC1C,GAAIqJ,GAAuCvJ,EAAIqR,KAC3C5I,EAAS,GAAIqI,GAAAnK,kBACjBnH,GAAE6I,KACElI,EAAKwK,WAAWtB,QAChBlJ,EAAKwK,WAAWrB,aAAaC,GAC7BpJ,EAAKwK,WAAWb,aAAaP,KAE5BkI,OACG,SAACC,EAAOC,EAAU/K,GACd6B,EAAOmJ,aAAeF,EAAMrI,MAC5BZ,EAAOoJ,gBAAkBF,EAAStI,MAClCZ,EAAO7B,KAAOA,EACd3G,EAAIgC,MAAMwG,GAAQqJ,WAM1CpB,GA/G0GF,EAAA7Q,eAApFrE,GAAAoV,sBzBmuChB,SAAUnV,EAAQD,EAASe,GAEjC,YAEA,IAAI+F,GAAazG,MAAQA,KAAKyG,WAAc,SAAUtF,EAAGuF,GAErD,QAASC,KAAO3G,KAAK4G,YAAczF,EADnC,IAAK,GAAIe,KAAKwE,GAAOA,EAAEzE,eAAeC,KAAIf,EAAEe,GAAKwE,EAAExE,GAEnDf,GAAEa,UAAkB,OAAN0E,EAAanF,OAAOsF,OAAOH,IAAMC,EAAG3E,UAAY0E,EAAE1E,UAAW,GAAI2E,K0BlvCnFyP,EAAA1V,GAAA,cAAA6F,GAAA,GAAAY,OAAA,oCAAAZ,GAAAxD,KAAA,mBAAAwD,MACAsO,EAAAnU,EAAA,GAEAuU,EAAA,SAAAjO,GAQI,QAAAiO,KAAA,GAAAzQ,GACIwC,EAAAjG,KAAAf,OAAOA,I1BgvCP,O0BnvCIwE,GAAA6R,aAAuB1R,OAAOD,OAAO4R,UAIzC9R,EAAK6Q,c1B+uCE7Q,E0BztCf,MAhCqCiC,GAAAwO,EAAAjO,GAajCiO,EAAAjT,UAAAqT,YAAA,WACI,GAAIkB,GAAUH,EAAOI,aACjBC,YAAazW,KAAKqW,aAClBrG,SAAU,SAAU3L,EAAKqS,EAAMC,GAC3BA,EAAG,KAAMD,EAAKE,aAAanH,MAAM,KAAK,GAAK,IAAMkB,KAAKkG,MAAQ,IAAMH,EAAKE,aAAanH,MAAM,KAAK,OAGrGqH,EAASV,GAAQG,QAASA,GAE9BvW,MAAKiE,OAAOiC,KAAK,IAAK4Q,EAAOC,OAAO,aAAc,SAAC1S,EAAKC,EAAKC,GACzD,GAAImS,GAAOrS,EAAIqS,IACXA,GACApS,EAAIgC,OAAO0Q,SAAS,EAAMhH,SAAU0G,EAAK1G,WAEzC1L,EAAI+B,OAAO,KAAKC,OAAO3D,QAAS,4DAKhDsS,GAhCqCJ,EAAA7Q,eAAxBrE,GAAAsV,mB1BoxCP,SAAUrV,EAAQD,EAASe,GAEjC,Y2BzxCA,IAAAiK,GAAAjK,EAAA,EAAQf,GAAAoH,iBAAA4D,EAAA5D,gBACR,IAAA6D,GAAAlK,EAAA,EAAQf,GAAAiI,iBAAAgD,EAAAhD,kB3BkyCF,SAAUhI,EAAQD,EAASe,GAEjC,Y4BryCA,IAAAuW,GAAAvW,EAAA,IACAkD,EAAAlD,EAAA,GAEAoD,EAAApD,EAAA,GAEA8J,EAAA,mBAAAA,MAiCA,MAhCIA,GAAAxI,UAAAsF,WAAA,SAAWU,EAAK5G,GACZ,GAAIiG,GAAO,GAAI4P,GAAGC,MACdC,IAAKnP,EAAI4B,gBACTC,KAAM7B,EAAI6B,KACVC,SAAU9B,EAAI8B,SACdC,KAAM/B,EAAI+B,KACVC,SAAUhC,EAAIgC,UAGlB,OADApG,GAAQqB,MAAM,uBAAyB7D,EAAO,QAAU4G,EAAI6B,KAAO,kBAC5DxC,GAOJmD,EAAAxI,UAAAkI,MAAP,SAAaC,EAAa1C,EAAYpC,EAAwBM,EAA+ByE,GACzFxG,EAAQqB,MAAM,eAAiBkF,GAC/BvG,EAAQqB,MAAM,cAAgBC,KAAKC,UAAUsC,IAC7CzH,KAAKwH,QAAQ4C,GAAMF,MAAMC,EAAK1C,EAAO,SAAC3C,EAAKuF,GACnCvF,GACAlB,EAAQf,MAAM,sBAAwBsH,GACtCvG,EAAQf,MAAM,gBAAkBqC,KAAKC,UAAUsC,IAC/C7D,EAAQf,MAAMiC,EAAIhC,YAClBuC,EAAMC,OAAO,GAAIxB,GAAA1B,iBAAiB,SAAU0C,EAAIhC,cAE5C6C,GACAA,EAAS0E,MAK7BG,IAjCsB7K,GAAA6K,gB5B20ChB,SAAU5K,EAAQD,EAASe,GAEjC,Y6Bj1CA,IAAAmK,GAAAnK,EAAA,EAAQf,GAAA4K,sBAAAM,EAAAN,uB7By1CF,SAAU3K,EAAQD,EAASe,GAEjC,YAEA,IAAI+F,GAAazG,MAAQA,KAAKyG,WAAc,SAAUtF,EAAGuF,GAErD,QAASC,KAAO3G,KAAK4G,YAAczF,EADnC,IAAK,GAAIe,KAAKwE,GAAOA,EAAEzE,eAAeC,KAAIf,EAAEe,GAAKwE,EAAExE,GAEnDf,GAAEa,UAAkB,OAAN0E,EAAanF,OAAOsF,OAAOH,IAAMC,EAAG3E,UAAY0E,EAAE1E,UAAW,GAAI2E,KAE/EyQ,EAAcpX,MAAQA,KAAKoX,YAAe,SAAUC,EAAY5O,EAAQyD,EAAKoL,GAC7E,GAA2HnW,GAAvHF,EAAIsW,UAAUrP,OAAQsP,EAAIvW,EAAI,EAAIwH,EAAkB,OAAT6O,EAAgBA,EAAO/V,OAAOkW,yBAAyBhP,EAAQyD,GAAOoL,CACrH,IAAuB,gBAAZrO,UAAoD,kBAArBA,SAAQyO,SAAyBF,EAAIvO,QAAQyO,SAASL,EAAY5O,EAAQyD,EAAKoL,OACpH,KAAK,GAAIzW,GAAIwW,EAAWnP,OAAS,EAAGrH,GAAK,EAAGA,KAASM,EAAIkW,EAAWxW,MAAI2W,GAAKvW,EAAI,EAAIE,EAAEqW,GAAKvW,EAAI,EAAIE,EAAEsH,EAAQyD,EAAKsL,GAAKrW,EAAEsH,EAAQyD,KAASsL,EAChJ,OAAOvW,GAAI,GAAKuW,GAAKjW,OAAOC,eAAeiH,EAAQyD,EAAKsL,GAAIA,GAE5DG,EAAc3X,MAAQA,KAAK2X,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZ5O,UAAoD,kBAArBA,SAAQC,SAAyB,MAAOD,SAAQC,SAAS0O,EAAGC,I8B12C1GC,EAAApX,EAAA,IACAyK,EAAAzK,EAAA,GAEAqX,EAAA,SAAA/Q,GAAA,QAAA+Q,K9B82CQ,MAAO/Q,GAAOsG,MAAMtN,KAAMuX,YAAcvX,K8Bj2ChD,MAbuCyG,GAAAsR,EAAA/Q,GAavC+Q,GAbuCD,EAAA/M,iBAInCqM,IADCjM,EAAAnC,YAAW,G9Bi3CZ2O,EAAW,cAAeK,SAC3BD,EAAS/V,UAAW,WAAY,Q8Br3CbrC,EAAAoY,Y9B23ChB,SAAUnY,EAAQD,EAASe,GAEjC,Y+B/3CA,IAAAkN,GAAA,mBAAAA,KAGI5N,KAAA6N,gBAA0B,GAE9B,MAAAD,KALajO,GAAAiO,mBAOb,IAAAM,GAAA,mBAAAA,KAIIlO,KAAAiY,MAAgB,GACpB,MAAA/J,KALavO,GAAAuO,U/B44CP,SAAUtO,EAAQD,EAASe,GAEjC,YAEA,IAAI+F,GAAazG,MAAQA,KAAKyG,WAAc,SAAUtF,EAAGuF,GAErD,QAASC,KAAO3G,KAAK4G,YAAczF,EADnC,IAAK,GAAIe,KAAKwE,GAAOA,EAAEzE,eAAeC,KAAIf,EAAEe,GAAKwE,EAAExE,GAEnDf,GAAEa,UAAkB,OAAN0E,EAAanF,OAAOsF,OAAOH,IAAMC,EAAG3E,UAAY0E,EAAE1E,UAAW,GAAI2E,KgC35CnFhD,EAAAjD,EAAA,IACAkD,EAAAlD,EAAA,GACAmD,EAAAnD,EAAA,GACAwX,EAAAxX,EAAA,IACAyX,EAAAzX,EAAA,IAGA0X,EAAA,SAAApR,GAAA,QAAAoR,KhC85CQ,MAAOpR,GAAOsG,MAAMtN,KAAMuX,YAAcvX,KgC51ChD,MAlEqEyG,GAAA2R,EAAApR,GAEjEoR,EAAApW,UAAA2K,OAAA,SAAO5C,EAASuC,GACZ,GAAIjH,GAAQxB,EAAEwB,QACV0D,EAAK/I,KAAK2L,MAAM3L,KAAKuL,aAAazC,YAYtC,OAXIiB,GAAKC,WACLD,EAAKC,SAAWmO,EAAAnH,WAAWC,WAAWlH,EAAKC,WAE/CjB,EAAGmB,MACC,UAAYlK,KAAKuL,aAAa7C,eAAiB,qBAC9C1I,KAAK6M,SAAS9C,GAAOuC,GACtBjH,EACA,SAACyH,GACGzH,EAAME,QAAQuH,EAAOV,gBAGtB/G,EAAMG,SAGjB4S,EAAApW,UAAAqW,MAAA,SAAMC,EAAkBtO,GAAxB,GAAAxF,GAAAxE,KACQuY,EAAoBJ,EAAAnH,WAAWC,WAAWjH,GAC1C3E,EAAQxB,EAAEwB,OAkBd,OAjBWrF,MAAK2L,MAAM3L,KAAKuL,aAAazC,aACnCoB,MACD,iBAAmBlK,KAAKuL,aAAa7C,eAAiB,oCACrD4P,EAAUC,GACXlT,EACA,SAACyH,GACyB,IAAlBA,EAAO5E,OACP7C,EAAME,QAAQ,MAEdf,EAAK+H,YAAYO,EAAO,IAAIN,KACxB,SAAAzC,GACI1E,EAAME,SAAS+G,GAAIvC,EAAKuC,GAAIkM,MAAOhU,EAAKiU,YAAY1O,GAAO2O,OAAQ3O,QAMhF1E,EAAMG,SAGjB4S,EAAApW,UAAA2W,kBAAA,SAAkBC,EAAqBC,GACnC,GAAIxT,GAAQxB,EAAEwB,QACVgC,EAAOrH,KAAK2L,MAAM3L,KAAKuL,aAAazC,aACpCgQ,EAAMX,EAAAnH,WAAWC,WAAW2H,EAShC,OARAvR,GAAK6C,MACD,UAAYlK,KAAKuL,aAAa7C,eAAiB,8BAC9CoQ,EAAKD,GACNxT,EACA,SAACyH,GACGzH,EAAME,QAAQuH,EAAOV,gBAGtB/G,EAAMG,SAGjB4S,EAAApW,UAAAyW,YAAA,SAAY1O,GACRnG,EAAQqB,MAAM,8BAAgC8E,EAAKuC,GAAK,aAAevC,EAAKuO,SAAW,SAAWvO,EAAKgP,KAAO,IAC9G,IAAIrU,GAASC,OAAOD,MACpB,OAAOf,GAAIqV,MACP1M,GAAIvC,EAAKuC,GACTgM,SAAUvO,EAAKuO,SACfS,KAAMhP,EAAKgP,MACZrU,EAAOG,WAAYoU,UAAWvU,EAAOwU,cAEhDd,GAlEqEF,EAAA9M,eAA/CzL,GAAAyY,sBhCq9ChB,SAAUxY,EAAQD,EAASe,GAEjC,YAEA,SAASwU,GAASlU,GACd,IAAK,GAAIkB,KAAKlB,GAAQrB,EAAQsC,eAAeC,KAAIvC,EAAQuC,GAAKlB,EAAEkB,IiCj+CpEgT,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,IACAwU,EAAAxU,EAAA,KACAwU,EAAAxU,EAAA,MjCw+CM,SAAUd,EAAQD,EAASe,GAEjC,YkC1+CA,IAAAyY,GAAA,mBAAAA,MAUA,MAPkBA,GAAArT,YAAd,WACI,MAAOqT,GAA2BjS,WAGtCiS,EAAAnX,UAAAqW,MAAA,SAA0DC,EAAkBtO,EAAkBoP,GAC1F,MAAOA,GAAef,MAAMC,EAAUtO,IAE9CmP,IATmBA,GAAAjS,UAAwC,GAAIiS,GADlDxZ,EAAAwZ,8BlC6/CP,SAAUvZ,EAAQD,EAASe,GAEjC,YmCngDA,IAAAmD,GAAAnD,EAAA,GAGA2Y,EAAA,mBAAAA,MAqBA,MAlBkBA,GAAAvT,YAAd,WACI,MAAOuT,GAAyBnS,WAGpCmS,EAAArX,UAAAqW,MAAA,SAAMC,EAAkBtO,GAYpB,MAAOnG,GAAE0B,QAAQ,OAEzB8T,IApBmBA,GAAAnS,UAAsC,GAAImS,GADhD1Z,EAAA0Z,4BnCohDP,SAAUzZ,EAAQD,EAASe,GAEjC,YoCzhDA,IAAAkD,GAAAlD,EAAA,GACA4Y,EAAA5Y,EAAA,IAGA6Y,EAAA7Y,EAAA,IACA8Y,EAAA9Y,EAAA,IACA+Y,EAAA/Y,EAAA,IACAgZ,EAAAhZ,EAAA,IACAiZ,EAAAjZ,EAAA,IACAkZ,EAAA,mBAAAA,MAmDA,MA/CkBA,GAAA9T,YAAd,WACI,MAAO8T,GAAmB1S,WAG9B0S,EAAA5X,UAAA6X,kBAAA,SAAkBnP,GACd,OAAQA,GACJ,IAAK,QACD,OAAO,GAAI4O,GAAAQ,qBAAsBhU,aAErC,KAAK,SACD,OAAO,GAAI2T,GAAAM,sBAAuBjU,aAEtC,KAAK,MACD,OAAO,GAAI4T,GAAAM,mBAAoBlU,aAEnC,KAAK,QACD,OAAO,GAAI6T,GAAAM,qBAAsBnU,gBAK7C8T,EAAA5X,UAAAkY,yBAAA,WACI,GAAIxV,GAASC,OAAOD,MACpB,QAAQA,EAAOyV,WACX,IAAK,MAED,MADAvW,GAAQqD,KAAK,oCACNsS,EAAAF,yBAAyBvT,aAEpC,KAAK,QAED,MADAlC,GAAQqD,KAAK,sCACNuS,EAAAL,2BAA2BrT,aAEtC,SAEI,MADAlC,GAAQf,MAAM,8BAA8B6B,EAAOyV,UAAS,MACrD,OAKnBP,EAAA5X,UAAAoY,UAAA,WACI,MAAOR,GAAmBS,SAG9BT,EAAA5X,UAAAsY,UAAA,SAAU5V,GACNkV,EAAmBS,QAAU3V,GAGrCkV,IAlDmBA,GAAA1S,UAAgC,GAAI0S,GAD1Cja,EAAAia,sBpC8kDP,SAAUha,EAAQD,EAASe,GAEjC,YqCzlDA,IAAAkD,GAAAlD,EAAA,GAEAuZ,EAAA,mBAAAA,MAYA,MATWA,GAAAjY,UAAA8D,YAAP,WACI,MAAOmU,GAAoB/S,WAG/B+S,EAAAjY,UAAAuY,YAAA,SAAY5X,GAGR,MADAiB,GAAQqD,KAAK,eACN,MAEfgT,IAXmBA,GAAA/S,UAAiC,GAAI+S,GAD3Cta,EAAAsa,uBrC4mDP,SAAUra,EAAQD,EAASe,GAEjC,YsChnDA,IAAAkD,GAAAlD,EAAA,GAEAoZ,EAAA,mBAAAA,MAUA,MARWA,GAAA9X,UAAA8D,YAAP,WACI,MAAOgU,GAAoB5S,WAE/B4S,EAAA9X,UAAAuY,YAAA,SAAY5X,GAGR,MADAiB,GAAQqD,KAAK,wBACN,MAEf6S,IATmBA,GAAA5S,UAAkC,GAAI4S,GAD5Cna,EAAAma,uBtCmoDP,SAAUla,EAAQD,EAASe,GAEjC,YuCvoDA,IAAAkD,GAAAlD,EAAA,GAEAsZ,EAAA,mBAAAA,MAUA,MARWA,GAAAhY,UAAA8D,YAAP,WACI,MAAOkU,GAAkB9S,WAE7B8S,EAAAhY,UAAAuY,YAAA,SAAY5X,GAGR,MADAiB,GAAQqD,KAAK,0BACN,MAEf+S,IATmBA,GAAA9S,UAAgC,GAAI8S,GAD1Cra,EAAAqa,qBvC0pDP,SAAUpa,EAAQD,EAASe,GAEjC,YwC9pDA,IAAAkD,GAAAlD,EAAA,GAEAqZ,EAAA,mBAAAA,MAUA,MARWA,GAAA/X,UAAA8D,YAAP,WACI,MAAOiU,GAAqB7S,WAEhC6S,EAAA/X,UAAAuY,YAAA,SAAY5X,GAGR,MADAiB,GAAQqD,KAAK,2BACN,MAEf8S,IATmBA,GAAA7S,UAAmC,GAAI6S,GAD7Cpa,EAAAoa,wBxCirDP,SAAUna,EAAQD,GyCvrDxBC,EAAAD,QAAAE,QAAA,YzC6rDM,SAAUD,EAAQD,G0C7rDxBC,EAAAD,QAAAE,QAAA,U1CmsDM,SAAUD,EAAQD,G2CnsDxBC,EAAAD,QAAAE,QAAA,O3CysDM,SAAUD,EAAQD,G4CzsDxBC,EAAAD,QAAAE,QAAA","file":"core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"winston\"), require(\"q\"), require(\"crypto\"), require(\"jsonwebtoken\"), require(\"express\"), require(\"mysql\"), require(\"pg\"), require(\"reflect-metadata\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [\"winston\", \"q\", \"crypto\", \"jsonwebtoken\", \"express\", \"mysql\", \"pg\", \"reflect-metadata\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory(require(\"winston\"), require(\"q\"), require(\"crypto\"), require(\"jsonwebtoken\"), require(\"express\"), require(\"mysql\"), require(\"pg\"), require(\"reflect-metadata\"));\n\telse\n\t\troot[\"core\"] = factory(root[\"winston\"], root[\"q\"], root[\"crypto\"], root[\"jsonwebtoken\"], root[\"express\"], root[\"mysql\"], root[\"pg\"], root[\"reflect-metadata\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"winston\"), require(\"q\"), require(\"crypto\"), require(\"jsonwebtoken\"), require(\"express\"), require(\"mysql\"), require(\"pg\"), require(\"reflect-metadata\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [\"winston\", \"q\", \"crypto\", \"jsonwebtoken\", \"express\", \"mysql\", \"pg\", \"reflect-metadata\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory(require(\"winston\"), require(\"q\"), require(\"crypto\"), require(\"jsonwebtoken\"), require(\"express\"), require(\"mysql\"), require(\"pg\"), require(\"reflect-metadata\"));\n\telse\n\t\troot[\"core\"] = factory(root[\"winston\"], root[\"q\"], root[\"crypto\"], root[\"jsonwebtoken\"], root[\"express\"], root[\"mysql\"], root[\"pg\"], root[\"reflect-metadata\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 31);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"winston\");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"q\");\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar serviceException = (function () {\r\n    function serviceException(_errCode, _error, errorMessage) {\r\n        this.errCode = _errCode;\r\n        var exceptionConfig = this.getMsgByCode(_errCode);\r\n        this.message = exceptionConfig.message;\r\n        this.statusCode = exceptionConfig.statusCode;\r\n        if (_error) {\r\n            this.error = _error.toString();\r\n        }\r\n        if (errorMessage) {\r\n            this.message = errorMessage;\r\n        }\r\n    }\r\n    serviceException.prototype.getMsgByCode = function (code) {\r\n        var message = new exceptionConfig(\"Unknown Error\", 500);\r\n        if (messageConfig[code]) {\r\n            message = messageConfig[code];\r\n        }\r\n        return message;\r\n    };\r\n    return serviceException;\r\n}());\r\nexports.serviceException = serviceException;\r\nvar exceptionConfig = (function () {\r\n    function exceptionConfig(_message, _statusCode) {\r\n        if (_statusCode === void 0) { _statusCode = 500; }\r\n        this.message = _message;\r\n        this.statusCode = _statusCode;\r\n    }\r\n    return exceptionConfig;\r\n}());\r\nexports.exceptionConfig = exceptionConfig;\r\nvar messageConfig = {\r\n    ERR_404: new exceptionConfig(\"Request not found!\", 404),\r\n    ERR_500: new exceptionConfig(\"Server Error!\", 500),\r\n    ERR_nologin: new exceptionConfig(\"Token Missing!\", 401),\r\n    ERR_relogin: new exceptionConfig(\"Token Timeout!\", 401),\r\n    WARNING_authFail: new exceptionConfig(\"Login Fail！\", 400),\r\n    ERR_401: new exceptionConfig(\"Permission Denied!\", 401),\r\n    ERR_DB: new exceptionConfig(\"Database failure!\", 500)\r\n};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar express = __webpack_require__(39);\r\nvar jwt = __webpack_require__(17);\r\nvar winston = __webpack_require__(0);\r\nvar Q = __webpack_require__(1);\r\nvar serviceException_1 = __webpack_require__(2);\r\nvar apiService_1 = __webpack_require__(13);\r\nvar baseController = (function () {\r\n    function baseController() {\r\n        this.router = express.Router();\r\n    }\r\n    baseController.prototype.getRouter = function () {\r\n        return this.router;\r\n    };\r\n    baseController.prototype.checkAuthentication = function (req, res, next) {\r\n        var _this = this;\r\n        var auth = req.get('jwt');\r\n        if (!auth) {\r\n            winston.error('request without token, reject.');\r\n            this.handleError(new serviceException_1.serviceException(\"ERR_nologin\"), res);\r\n        }\r\n        else {\r\n            var config = global.config;\r\n            jwt.verify(auth, config.jwtSecKey, function (err, decoded) {\r\n                if (err) {\r\n                    winston.error(err.message);\r\n                    _this.handleError(new serviceException_1.serviceException(\"ERR_relogin\", err.message), res);\r\n                }\r\n                else {\r\n                    winston.debug(\"user[\" + JSON.stringify(decoded) + \"] check token success\");\r\n                    next();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    baseController.prototype.getAuthentication = function (req) {\r\n        var defer = Q.defer();\r\n        var auth = req.get('jwt');\r\n        if (!auth) {\r\n            defer.reject(new serviceException_1.serviceException(\"ERR_relogin\"));\r\n        }\r\n        else {\r\n            var config = global.config;\r\n            jwt.verify(auth, config.jwtSecKey, function (err, decoded) {\r\n                if (err) {\r\n                    defer.reject(new serviceException_1.serviceException(\"ERR_relogin\"));\r\n                }\r\n                else {\r\n                    winston.debug(\"user from token:[\" + JSON.stringify(decoded) + \"]\");\r\n                    defer.resolve(decoded);\r\n                }\r\n            });\r\n        }\r\n        return defer.promise;\r\n    };\r\n    baseController.prototype.getAuthenticationSync = function (req) {\r\n        try {\r\n            var auth = req.get('jwt');\r\n            var config = global.config;\r\n            var decoded = jwt.verify(auth, config.jwtSecKey);\r\n            return decoded;\r\n        }\r\n        catch (err) {\r\n            return null;\r\n        }\r\n    };\r\n    baseController.prototype.get = function (url, callback, withAuth) {\r\n        if (withAuth === void 0) { withAuth = true; }\r\n        apiService_1.apiService.getInstance().push({ method: 'get', url: url });\r\n        if (withAuth) {\r\n            this.router.get(url, this.checkAuthentication.bind(this), callback);\r\n        }\r\n        else {\r\n            this.router.get(url, callback);\r\n        }\r\n    };\r\n    baseController.prototype.post = function (url, callback, withAuth) {\r\n        if (withAuth === void 0) { withAuth = true; }\r\n        apiService_1.apiService.getInstance().push({ method: 'post', url: url });\r\n        if (withAuth) {\r\n            this.router.post(url, this.checkAuthentication.bind(this), callback);\r\n        }\r\n        else {\r\n            this.router.post(url, callback);\r\n        }\r\n    };\r\n    baseController.prototype.put = function (url, callback) {\r\n        apiService_1.apiService.getInstance().push({ method: 'put', url: url });\r\n        this.router.put(url, this.checkAuthentication.bind(this), callback);\r\n    };\r\n    baseController.prototype.delete = function (url, callback) {\r\n        apiService_1.apiService.getInstance().push({ method: 'delete', url: url });\r\n        this.router.delete(url, this.checkAuthentication.bind(this), callback);\r\n    };\r\n    baseController.prototype.handleError = function (error, res, req) {\r\n        try {\r\n            res.status(error.statusCode).jsonp(error);\r\n            winston.error(\"server error:\" + JSON.stringify(error));\r\n        }\r\n        catch (e) {\r\n            winston.error(\"unknown server error:\" + error.stack);\r\n            res.status(500).jsonp({\r\n                \"errCode\": \"ERR_500\",\r\n                \"message\": \"Server error\",\r\n                \"statusCode\": 500,\r\n                \"error\": \"unknown Server error\"\r\n            });\r\n        }\r\n    };\r\n    return baseController;\r\n}());\r\nexports.baseController = baseController;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar winston = __webpack_require__(0);\r\nvar MySQLDB_1 = __webpack_require__(7);\r\nvar centralizedMySQL = (function (_super) {\r\n    __extends(centralizedMySQL, _super);\r\n    function centralizedMySQL() {\r\n        var _this = _super.call(this) || this;\r\n        winston.info('init centralizedMySQL');\r\n        if (centralizedMySQL._instance) {\r\n            throw new Error(\"Error: Instantiation failed: Use getInstance() instead of new.\");\r\n        }\r\n        centralizedMySQL._instance = _this;\r\n        return _this;\r\n    }\r\n    centralizedMySQL.getInstance = function () {\r\n        return centralizedMySQL._instance;\r\n    };\r\n    centralizedMySQL.prototype.init = function () {\r\n        var config = global.config;\r\n        this.pool = this.createPool(config.centralizedDB, 'centralized');\r\n    };\r\n    centralizedMySQL.prototype.getPool = function (param) {\r\n        winston.debug(\"in database:[centralized]\");\r\n        return this.pool;\r\n    };\r\n    return centralizedMySQL;\r\n}(MySQLDB_1.MySQLDB));\r\ncentralizedMySQL._instance = new centralizedMySQL();\r\nexports.centralizedMySQL = centralizedMySQL;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar winston = __webpack_require__(0);\r\nvar tools_1 = __webpack_require__(15);\r\nvar MySQLDB_1 = __webpack_require__(7);\r\nvar distributedMySQL = (function (_super) {\r\n    __extends(distributedMySQL, _super);\r\n    function distributedMySQL() {\r\n        var _this = _super.call(this) || this;\r\n        _this.pools = [];\r\n        winston.info('init distributedMySQL');\r\n        if (distributedMySQL._instance) {\r\n            throw new Error(\"Error: Instantiation failed: Use getInstance() instead of new.\");\r\n        }\r\n        distributedMySQL._instance = _this;\r\n        return _this;\r\n    }\r\n    distributedMySQL.getInstance = function () {\r\n        return distributedMySQL._instance;\r\n    };\r\n    distributedMySQL.prototype.init = function () {\r\n        var _this = this;\r\n        var config = global.config;\r\n        config.distributedDBs.map(function (cfg) {\r\n            _this.pools.push(_this.createPool(cfg, 'distributed'));\r\n        });\r\n    };\r\n    distributedMySQL.prototype.getPool = function (indicator) {\r\n        if (this.pools.length === 1) {\r\n            return this.pools[0];\r\n        }\r\n        if (!indicator) {\r\n            winston.error(\"Implementation Error: A query to distributed db should always give indicator\");\r\n            throw new Error(\"A query to distributed db should always give indicator\");\r\n        }\r\n        return this.getDBByIndicator(indicator);\r\n    };\r\n    distributedMySQL.prototype.getDBByIndicator = function (indicator) {\r\n        var dbHash = tools_1.tools.getHash(indicator);\r\n        winston.debug(\"in database:[distributed][\" + dbHash + \"]\");\r\n        return this.pools[dbHash];\r\n    };\r\n    return distributedMySQL;\r\n}(MySQLDB_1.MySQLDB));\r\ndistributedMySQL._instance = new distributedMySQL();\r\nexports.distributedMySQL = distributedMySQL;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar exportMetadataKey = Symbol(\"exportMetadataKey\");\r\nvar subQueryMetadataKey = Symbol(\"subQueryMetadataKey\");\r\n__webpack_require__(42);\r\nfunction RESTEntity(option) {\r\n    return function decorator(target) {\r\n        target.prototype.getTableName = function () { return option.table; };\r\n        target.prototype.getRESTUrl = function () { return option.URL; };\r\n        target.prototype.getDBType = function () { return option.db; };\r\n    };\r\n}\r\nexports.RESTEntity = RESTEntity;\r\nfunction exportable(value) {\r\n    return Reflect.metadata(exportMetadataKey, value);\r\n}\r\nexports.exportable = exportable;\r\nfunction getExportable(target, propertyKey) {\r\n    return Reflect.getMetadata(exportMetadataKey, target, propertyKey);\r\n}\r\nexports.getExportable = getExportable;\r\nfunction subQuery(value) {\r\n    return Reflect.metadata(subQueryMetadataKey, value);\r\n}\r\nexports.subQuery = subQuery;\r\nfunction getSubQuery(target, propertyKey) {\r\n    return Reflect.getMetadata(subQueryMetadataKey, target, propertyKey);\r\n}\r\nexports.getSubQuery = getSubQuery;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar mysql = __webpack_require__(40);\r\nvar winston = __webpack_require__(0);\r\nvar serviceException_1 = __webpack_require__(2);\r\nvar MySQLDB = (function () {\r\n    function MySQLDB() {\r\n    }\r\n    MySQLDB.prototype.createPool = function (cfg, name) {\r\n        var pool = mysql.createPool({\r\n            connectionLimit: cfg.connectionLimit,\r\n            host: cfg.host,\r\n            database: cfg.database,\r\n            user: cfg.user,\r\n            password: cfg.password,\r\n            dateStrings: true\r\n        });\r\n        winston.debug(\"MySQL database pool(\" + name + \") at:\" + cfg.host + \" created.\");\r\n        return pool;\r\n    };\r\n    MySQLDB.prototype.query = function (sql, param, defer, callback, meid) {\r\n        winston.debug('execute sql:' + sql);\r\n        winston.debug('with param:' + JSON.stringify(param));\r\n        this.getPool(meid).query(sql, param, function (err, rows) {\r\n            if (err) {\r\n                winston.error(\"while execute SQL: \" + sql);\r\n                winston.error(\"with params: \" + JSON.stringify(param));\r\n                winston.error(err.toString());\r\n                defer.reject(new serviceException_1.serviceException(\"ERR_DB\", err.toString()));\r\n            }\r\n            else {\r\n                if (callback) {\r\n                    callback(rows);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return MySQLDB;\r\n}());\r\nexports.MySQLDB = MySQLDB;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar winston = __webpack_require__(0);\r\nvar PostgreSQLDB_1 = __webpack_require__(26);\r\nvar centralizedPostgreSQL = (function (_super) {\r\n    __extends(centralizedPostgreSQL, _super);\r\n    function centralizedPostgreSQL() {\r\n        var _this = _super.call(this) || this;\r\n        winston.info('init centralizedPostgreSQL');\r\n        if (centralizedPostgreSQL._instance) {\r\n            throw new Error(\"Error: Instantiation failed: Use getInstance() instead of new.\");\r\n        }\r\n        centralizedPostgreSQL._instance = _this;\r\n        return _this;\r\n    }\r\n    centralizedPostgreSQL.getInstance = function () {\r\n        return centralizedPostgreSQL._instance;\r\n    };\r\n    centralizedPostgreSQL.prototype.init = function () {\r\n        var config = global.config;\r\n        this.pool = this.createPool(config.centralizedDB, 'centralized');\r\n    };\r\n    centralizedPostgreSQL.prototype.getPool = function (param) {\r\n        winston.debug(\"in database:[centralized]\");\r\n        return this.pool;\r\n    };\r\n    return centralizedPostgreSQL;\r\n}(PostgreSQLDB_1.PostgreSQLDB));\r\ncentralizedPostgreSQL._instance = new centralizedPostgreSQL();\r\nexports.centralizedPostgreSQL = centralizedPostgreSQL;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar centralizedMySQL_1 = __webpack_require__(4);\r\nvar distributedMySQL_1 = __webpack_require__(5);\r\nvar centralizedPostgreSQL_1 = __webpack_require__(8);\r\nfunction initDB(type) {\r\n    switch (type) {\r\n        case \"MySQL\":\r\n            centralizedMySQL_1.centralizedMySQL.getInstance().init();\r\n            distributedMySQL_1.distributedMySQL.getInstance().init();\r\n        case \"PostgreSQL\":\r\n            centralizedPostgreSQL_1.centralizedPostgreSQL.getInstance().init();\r\n    }\r\n}\r\nexports.initDB = initDB;\r\nvar dbType;\r\n(function (dbType) {\r\n    dbType[dbType[\"distributed\"] = 0] = \"distributed\";\r\n    dbType[dbType[\"centralized\"] = 1] = \"centralized\";\r\n})(dbType = exports.dbType || (exports.dbType = {}));\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar baseDomainObject = (function () {\r\n    function baseDomainObject() {\r\n    }\r\n    baseDomainObject.prototype.getTableName = function () {\r\n        throw new Error('table name of this object is not defined!');\r\n    };\r\n    baseDomainObject.prototype.getRESTUrl = function () {\r\n        throw new Error('REST URL of this object is not defined!');\r\n    };\r\n    baseDomainObject.prototype.getDBType = function () {\r\n        throw new Error('dbType of this object is not defined!');\r\n    };\r\n    return baseDomainObject;\r\n}());\r\nexports.baseDomainObject = baseDomainObject;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar paginationResponse = (function () {\r\n    function paginationResponse() {\r\n        this.data = [];\r\n    }\r\n    return paginationResponse;\r\n}());\r\nexports.paginationResponse = paginationResponse;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar Q = __webpack_require__(1);\r\nvar baseDB_1 = __webpack_require__(9);\r\nvar RESTEntity_1 = __webpack_require__(6);\r\nvar centralizedMySQL_1 = __webpack_require__(4);\r\nvar distributedMySQL_1 = __webpack_require__(5);\r\nvar baseRepository = (function () {\r\n    function baseRepository(_domainObject) {\r\n        this._domainObject = _domainObject;\r\n        this.centralizedDB = centralizedMySQL_1.centralizedMySQL.getInstance();\r\n        this.distributedDB = distributedMySQL_1.distributedMySQL.getInstance();\r\n        this.domainObject = new this._domainObject();\r\n    }\r\n    baseRepository.prototype.getDomainObject = function () {\r\n        return this.domainObject;\r\n    };\r\n    baseRepository.prototype.insert = function (objectToInsert, indicator) {\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\"insert into \" + this.domainObject.getTableName() + \" set ?\", objectToInsert, defer, function (rows) {\r\n            defer.resolve(rows.insertId);\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.batchInsert = function (objectsToInsert, indicator) {\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        var keys = Object.keys(objectsToInsert[0]);\r\n        var data = [];\r\n        objectsToInsert.forEach(function (domainObject) {\r\n            var values = [];\r\n            keys.map((function (key) {\r\n                values.push(domainObject[key]);\r\n            }));\r\n            data.push(values);\r\n        });\r\n        db.query(\"insert into \" + this.domainObject.getTableName() + \" (\" + keys.join() + \") values ?\", [data], defer, function (rows) {\r\n            defer.resolve(rows.affectedRows);\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.queryByID = function (id, postProcess, indicator) {\r\n        var _this = this;\r\n        if (postProcess === void 0) { postProcess = true; }\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\"select * from \" + this.domainObject.getTableName() + \" where id=?\", [id], defer, function (rows) {\r\n            if (rows.length !== 1) {\r\n                defer.resolve(null);\r\n            }\r\n            else {\r\n                if (postProcess) {\r\n                    _this.postProcess(rows[0]).then(defer.resolve);\r\n                }\r\n                else {\r\n                    defer.resolve(rows[0]);\r\n                }\r\n            }\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.listAll = function (postProcess, indicator) {\r\n        var _this = this;\r\n        if (postProcess === void 0) { postProcess = true; }\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\"select * from \" + this.domainObject.getTableName() + \" order by id desc \", [], defer, function (rows) {\r\n            if (postProcess) {\r\n                Q.all(rows.map(_this.postProcess.bind(_this))).then(function (values) {\r\n                    defer.resolve(rows);\r\n                });\r\n            }\r\n            else {\r\n                defer.resolve(rows);\r\n            }\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.update = function (objectToUpdate, id, indicator) {\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\"update \" + this.domainObject.getTableName() + \" set ? where id=?\", [this.removeID(objectToUpdate), id], defer, function (result) {\r\n            defer.resolve(result.affectedRows);\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.updateAndRefresh = function (objectToUpdate, id, indicator) {\r\n        var _this = this;\r\n        return this.update(objectToUpdate, id, indicator).then(function () {\r\n            return _this.queryByID(id, true, indicator);\r\n        });\r\n    };\r\n    baseRepository.prototype.delete = function (id, indicator) {\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\"delete from \" + this.domainObject.getTableName() + \" where id=?\", [id], defer, function (result) {\r\n            defer.resolve(result.affectedRows);\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.batchDelete = function (query, indicator) {\r\n        var _this = this;\r\n        var defer = Q.defer();\r\n        var where = \" \";\r\n        var first = true;\r\n        var arg = [];\r\n        Object.keys(query).forEach(function (key) {\r\n            if (first) {\r\n                where += \" where \" + key + _this.getConditionKey(query[key]);\r\n                first = false;\r\n            }\r\n            else {\r\n                where += \" and \" + key + _this.getConditionKey(query[key]);\r\n            }\r\n            Array.prototype.push.apply(arg, _this.getConditionArg(query[key]));\r\n        });\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\"delete from \" + this.domainObject.getTableName() + where, arg, defer, function (result) {\r\n            defer.resolve(result.affectedRows);\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.search = function (query, indicator) {\r\n        var _this = this;\r\n        var defer = Q.defer();\r\n        var where = \" \";\r\n        var first = true;\r\n        var arg = [];\r\n        Object.keys(query).forEach(function (key) {\r\n            if (first) {\r\n                where += \" where \" + key + _this.getConditionKey(query[key]);\r\n                first = false;\r\n            }\r\n            else {\r\n                where += \" and \" + key + _this.getConditionKey(query[key]);\r\n            }\r\n            Array.prototype.push.apply(arg, _this.getConditionArg(query[key]));\r\n        });\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\"select * from \" + this.domainObject.getTableName() + where + \" order by id desc \", arg, defer, function (rows) {\r\n            Q.all(rows.map(_this.postProcess.bind(_this))).then(function () {\r\n                defer.resolve(rows);\r\n            });\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.searchLike = function (query, indicator) {\r\n        var _this = this;\r\n        var defer = Q.defer();\r\n        var where = \" \";\r\n        var first = true;\r\n        var arg = [];\r\n        Object.keys(query).forEach(function (key) {\r\n            if (first) {\r\n                where += \" where \" + key + \" like ? \";\r\n                first = false;\r\n            }\r\n            else {\r\n                where += \" and \" + key + \" like ? \";\r\n            }\r\n            arg.push('%' + query[key] + '%');\r\n        });\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\"select * from \" + this.domainObject.getTableName() + where + \" order by id desc \", arg, defer, function (rows) {\r\n            Q.all(rows.map(_this.postProcess.bind(_this))).then(function () {\r\n                defer.resolve(rows);\r\n            });\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.count = function (indicator) {\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\"select count(1) as count from \" + this.domainObject.getTableName(), [], defer, function (result) {\r\n            defer.resolve(result[0]);\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.countAllLike = function (paginationRequest, indicator) {\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        var arg = [];\r\n        var where = \"\";\r\n        if (paginationRequest.searchAllColumn && paginationRequest.searchAllColumn.trim().length > 0) {\r\n            where = \" where (\";\r\n            var first = true;\r\n            for (var _i = 0, _a = paginationRequest.columns; _i < _a.length; _i++) {\r\n                var column = _a[_i];\r\n                if (first) {\r\n                    first = false;\r\n                    where += column.name + \" like ?\";\r\n                }\r\n                else {\r\n                    where += \" or \" + column.name + \" like ?\";\r\n                }\r\n                arg.push(\"%\" + paginationRequest.searchAllColumn + \"%\");\r\n            }\r\n            where += \") \";\r\n        }\r\n        db.query(\"select count(1) as count from \" + this.domainObject.getTableName() + where, arg, defer, function (result) {\r\n            defer.resolve(result[0]);\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.queryAllLike = function (paginationRequest, indicator) {\r\n        var _this = this;\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        var arg = [];\r\n        var where = \"\";\r\n        if (paginationRequest.searchAllColumn && paginationRequest.searchAllColumn.trim().length > 0) {\r\n            where = \" where (\";\r\n            var first = true;\r\n            for (var _i = 0, _a = paginationRequest.columns; _i < _a.length; _i++) {\r\n                var column = _a[_i];\r\n                if (first) {\r\n                    first = false;\r\n                    where += column.name + \" like ?\";\r\n                }\r\n                else {\r\n                    where += \" or \" + column.name + \" like ?\";\r\n                }\r\n                arg.push(\"%\" + paginationRequest.searchAllColumn + \"%\");\r\n            }\r\n            where += \") \";\r\n        }\r\n        arg.push(paginationRequest.start);\r\n        arg.push(paginationRequest.length);\r\n        db.query(\"select * from \" + this.domainObject.getTableName() + where + \" order by id desc \" + \" limit ?,?\", arg, defer, function (rows) {\r\n            Q.all(rows.map(_this.postProcess.bind(_this))).then(function () {\r\n                defer.resolve(rows);\r\n            });\r\n        }, indicator);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.queryByCreateDate = function (startDate, endDate) {\r\n        var defer = Q.defer();\r\n        var pool = this.getDB(this.domainObject.getDBType());\r\n        pool.query(\"select * from \" + this.domainObject.getTableName() + \" where create_date between ? and ?\" + \" order by id desc \", [startDate, endDate], defer, function (rows) {\r\n            defer.resolve(rows);\r\n        });\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.getDB = function (type) {\r\n        if (type === baseDB_1.dbType.distributed) {\r\n            return this.distributedDB;\r\n        }\r\n        else if (type === baseDB_1.dbType.centralized) {\r\n            return this.centralizedDB;\r\n        }\r\n    };\r\n    baseRepository.prototype.removeID = function (objectToUpdate) {\r\n        if (objectToUpdate.id) {\r\n            delete objectToUpdate.id;\r\n        }\r\n        return objectToUpdate;\r\n    };\r\n    baseRepository.prototype.postProcess = function (domain) {\r\n        return Q.all([this.removeNotExportable(domain), this.doSubQuery(domain)]).then(function () { return domain; });\r\n    };\r\n    baseRepository.prototype.doSubQuery = function (domain) {\r\n        var defer = Q.defer();\r\n        var subQuerys = [];\r\n        var _loop_1 = function (key) {\r\n            if (RESTEntity_1.getSubQuery(this_1.domainObject, key)) {\r\n                var handler_1 = RESTEntity_1.getSubQuery(this_1.domainObject, key);\r\n                if (domain[key]) {\r\n                    subQuerys.push(handler_1.repository.getInstance().queryByID(domain[key]).then(function (subObject) {\r\n                        domain[handler_1.name] = subObject;\r\n                        return domain;\r\n                    }));\r\n                }\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var key in domain) {\r\n            _loop_1(key);\r\n        }\r\n        Q.all(subQuerys).then(function () { return defer.resolve(domain); });\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.removeNotExportable = function (domain) {\r\n        var defer = Q.defer();\r\n        for (var key in domain) {\r\n            if (RESTEntity_1.getExportable(this.domainObject, key) === false) {\r\n                delete domain[key];\r\n            }\r\n        }\r\n        defer.resolve(domain);\r\n        return defer.promise;\r\n    };\r\n    baseRepository.prototype.getFields = function (objectToInsert) {\r\n        var result = [];\r\n        Object.getOwnPropertyNames(objectToInsert)\r\n            .forEach(function (field) {\r\n            result.push(field);\r\n        });\r\n        return result;\r\n    };\r\n    baseRepository.prototype.getConditionKey = function (query) {\r\n        if (query.toString().indexOf('{') >= 0) {\r\n            var result_1 = \" in (\";\r\n            var first_1 = true;\r\n            query.substring(query.indexOf('{') + 1, query.length - 1).split(\",\").forEach(function () {\r\n                if (first_1) {\r\n                    result_1 += \"?\";\r\n                    first_1 = false;\r\n                }\r\n                else {\r\n                    result_1 += \",?\";\r\n                }\r\n            });\r\n            return result_1 + \") \";\r\n        }\r\n        else {\r\n            return \"=? \";\r\n        }\r\n    };\r\n    baseRepository.prototype.getConditionArg = function (query) {\r\n        if (query.toString().indexOf('{') == 0) {\r\n            var q = query.substring(query.indexOf('{') + 1, query.length - 1);\r\n            return q.split(\",\");\r\n        }\r\n        else {\r\n            return [query];\r\n        }\r\n    };\r\n    return baseRepository;\r\n}());\r\nexports.baseRepository = baseRepository;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar rxjs_1 = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"@reactivex/rxjs\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\r\nvar winston = __webpack_require__(0);\r\nvar apiService = (function () {\r\n    function apiService() {\r\n        this.apiSteam = new rxjs_1.Subject();\r\n        try {\r\n            winston.add(winston.transports.File, {\r\n                filename: 'log/log.lo',\r\n                json: false,\r\n                maxsize: 400000,\r\n                maxFiles: 10,\r\n                level: 'debug'\r\n            });\r\n            winston.remove(winston.transports.Console);\r\n            winston.add(winston.transports.Console, {\r\n                prettyPrint: true,\r\n                colorize: true,\r\n                silent: false,\r\n                timestamp: function () {\r\n                    return new Date().toLocaleString();\r\n                },\r\n                level: 'debug'\r\n            });\r\n        }\r\n        catch (e) {\r\n            console.log(\"a winston init err?\" + e);\r\n        }\r\n        winston.info(\"init api service\");\r\n        if (apiService._instance) {\r\n            throw new Error(\"Error: Instantiation failed: Use getInstance() instead of new.\");\r\n        }\r\n        apiService._instance = this;\r\n        this.apiSteam.subscribe(function (info) {\r\n            winston.debug(\"creating api on URL:{\" + info.method + \"}     \" + info.url);\r\n        });\r\n    }\r\n    apiService.getInstance = function () {\r\n        return apiService._instance;\r\n    };\r\n    apiService.prototype.push = function (info) {\r\n        this.apiSteam.next(info);\r\n    };\r\n    return apiService;\r\n}());\r\napiService._instance = new apiService();\r\nexports.apiService = apiService;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar encryption;\r\n(function (encryption) {\r\n    var crypto = __webpack_require__(16);\r\n    var algorithm_aes128 = 'aes128';\r\n    var algorithm_rc4 = 'rc4';\r\n    function encryptMd5(s) {\r\n        s = s.toLowerCase().trim();\r\n        var md5 = crypto.createHash('md5');\r\n        md5.update(s);\r\n        return md5.digest('hex');\r\n    }\r\n    encryption.encryptMd5 = encryptMd5;\r\n    function encryptRC4(content) {\r\n        var config = global.config;\r\n        return cipher(algorithm_rc4, config.rc4_key, content, config.rc4_iv);\r\n    }\r\n    encryption.encryptRC4 = encryptRC4;\r\n    function decryptRC4(content) {\r\n        var config = global.config;\r\n        return decipher(algorithm_rc4, config.rc4_key, content, config.rc4_iv);\r\n    }\r\n    encryption.decryptRC4 = decryptRC4;\r\n    function encryptAES128(key, content) {\r\n        var config = global.config;\r\n        return cipher(algorithm_aes128, key, content, config.aes128_iv);\r\n    }\r\n    encryption.encryptAES128 = encryptAES128;\r\n    function decryptAES128(key, content) {\r\n        var config = global.config;\r\n        return decipher(algorithm_aes128, key, content, config.aes128_iv);\r\n    }\r\n    encryption.decryptAES128 = decryptAES128;\r\n    function cipher(algorithm, key, content, algorithm_iv) {\r\n        key = getBuffer(key);\r\n        content = getBuffer(content);\r\n        var cip = crypto.createCipheriv(algorithm, key, algorithm_iv);\r\n        var encrypted = cip.update(content, 'hex', 'hex');\r\n        encrypted += cip.final('hex');\r\n        return encrypted.toString('hex');\r\n    }\r\n    function decipher(algorithm, key, content, algorithm_iv) {\r\n        key = getBuffer(key);\r\n        content = getBuffer(content);\r\n        var decipher = crypto.createDecipheriv(algorithm, key, algorithm_iv);\r\n        var decrypted = decipher.update(content, 'hex', 'hex');\r\n        decrypted += decipher.final('hex');\r\n        return decrypted.toString('hex');\r\n    }\r\n    function getBuffer(cont) {\r\n        if (cont instanceof Buffer) {\r\n            return cont;\r\n        }\r\n        else {\r\n            return new Buffer(cont, 'hex');\r\n        }\r\n    }\r\n})(encryption = exports.encryption || (exports.encryption = {}));\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar crypto = __webpack_require__(16);\r\nvar tools;\r\n(function (tools) {\r\n    var charsetNumber = '1234567890';\r\n    function isEmptyObject(obj) {\r\n        for (var key in obj) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    tools.isEmptyObject = isEmptyObject;\r\n    function fillToLength(original, length) {\r\n        var shex = original ? original.toString(16) : \"\";\r\n        if (shex.length > length * 2) {\r\n            throw new Error(\"Illegal data length in fillToLength(): \" + original + \".length > \" + length);\r\n        }\r\n        while (shex.length < length * 2) {\r\n            shex = '0' + shex;\r\n        }\r\n        return shex;\r\n    }\r\n    tools.fillToLength = fillToLength;\r\n    function getHash(indicator) {\r\n        var config = global.config;\r\n        var dbCount = config.distributedDBs.length;\r\n        var last = indicator.slice(-1);\r\n        if (isNaN(parseInt(last[0]))) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return last[0] % dbCount;\r\n        }\r\n    }\r\n    tools.getHash = getHash;\r\n    function getIpAddress(req) {\r\n        var ipAddress;\r\n        var headers = req.headers;\r\n        var forwardedIpsStr = headers['x-forwarded-for'];\r\n        forwardedIpsStr ? ipAddress = forwardedIpsStr : ipAddress = null;\r\n        if (!ipAddress) {\r\n            ipAddress = req.connection.remoteAddress ||\r\n                req.socket.remoteAddress ||\r\n                req.connection.socket.remoteAddress;\r\n        }\r\n        return ipAddress;\r\n    }\r\n    tools.getIpAddress = getIpAddress;\r\n    function isErrorCountReset(first_time, minute) {\r\n        var flag = false;\r\n        var betweenTime = new Date().getTime() - first_time.getTime();\r\n        if (betweenTime > (1000 * 60 * minute)) {\r\n            flag = true;\r\n        }\r\n        return flag;\r\n    }\r\n    tools.isErrorCountReset = isErrorCountReset;\r\n    function generateRandomNumber(length) {\r\n        return generateRandom(length, charsetNumber);\r\n    }\r\n    tools.generateRandomNumber = generateRandomNumber;\r\n    function generateRandom(length, charset) {\r\n        var result = '';\r\n        while (result.length < length) {\r\n            var bf = void 0;\r\n            try {\r\n                bf = crypto.randomBytes(length);\r\n            }\r\n            catch (e) {\r\n                continue;\r\n            }\r\n            for (var i = 0; i < bf.length; i++) {\r\n                var index = bf.readUInt8(i) % charset.length;\r\n                result += charset.charAt(index);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n})(tools = exports.tools || (exports.tools = {}));\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"crypto\");\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"jsonwebtoken\");\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar baseController_1 = __webpack_require__(3);\r\nexports.baseController = baseController_1.baseController;\r\nvar baseCRUDController_1 = __webpack_require__(23);\r\nexports.baseCRUDController = baseCRUDController_1.baseCRUDController;\r\nvar imageController_1 = __webpack_require__(24);\r\nexports.imageController = imageController_1.imageController;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nvar baseDB_1 = __webpack_require__(9);\r\nexports.dbType = baseDB_1.dbType;\r\nexports.initDB = baseDB_1.initDB;\r\n__export(__webpack_require__(25));\r\n__export(__webpack_require__(27));\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(6));\r\n__export(__webpack_require__(10));\r\n__export(__webpack_require__(29));\r\n__export(__webpack_require__(11));\r\n__export(__webpack_require__(12));\r\n__export(__webpack_require__(28));\r\n__export(__webpack_require__(30));\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(34));\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(15));\r\n__export(__webpack_require__(13));\r\n__export(__webpack_require__(14));\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar baseController_1 = __webpack_require__(3);\r\nvar paginationResponse_1 = __webpack_require__(11);\r\nvar Q = __webpack_require__(1);\r\nvar baseCRUDController = (function (_super) {\r\n    __extends(baseCRUDController, _super);\r\n    function baseCRUDController(_domainObject, _repository) {\r\n        var _this = _super.call(this) || this;\r\n        _this._domainObject = _domainObject;\r\n        _this._repository = _repository;\r\n        _this.repository = _repository.getInstance();\r\n        _this.initRouters();\r\n        _this.createCRUD();\r\n        return _this;\r\n    }\r\n    baseCRUDController.prototype.createCRUD = function () {\r\n        var _this = this;\r\n        var domainObject = new this._domainObject();\r\n        var RESTUrl = domainObject.getRESTUrl();\r\n        this.get(RESTUrl, function (req, res, next) {\r\n            _this.repository.listAll().then(function (rows) { return res.status(200).jsonp(rows); }, function (error) { return _this.handleError(error, res); });\r\n        });\r\n        this.get(RESTUrl + '/search', function (req, res, next) {\r\n            _this.repository.search(req.query).then(function (rows) { return res.status(200).jsonp(rows); }, function (error) { return _this.handleError(error, res); });\r\n        });\r\n        this.get(RESTUrl + '/search/like', function (req, res, next) {\r\n            _this.repository.searchLike(req.query).then(function (rows) { return res.status(200).jsonp(rows); }, function (error) { return _this.handleError(error, res); });\r\n        });\r\n        this.get(RESTUrl + '/incremental', function (req, res, next) {\r\n            _this.repository\r\n                .queryByCreateDate(req.query.startDate, req.query.endDate)\r\n                .then(function (result) { return res.status(200).jsonp(result); }, function (error) { return _this.handleError(error, res); });\r\n        });\r\n        this.get(RESTUrl + '/:id', function (req, res, next) {\r\n            _this.repository.queryByID(req.params.id).then(function (result) {\r\n                if (result) {\r\n                    res.status(200).jsonp(result);\r\n                }\r\n                else {\r\n                    res.status(204).jsonp({});\r\n                }\r\n            }, function (error) { return _this.handleError(error, res); });\r\n        });\r\n        this.post(RESTUrl, function (req, res, next) {\r\n            if (Array.isArray(req.body)) {\r\n                _this.repository.batchInsert(req.body).then(function (insertID) { return res.status(201).jsonp({ affectedRows: insertID }); }, function (error) { return _this.handleError(error, res); });\r\n            }\r\n            else {\r\n                req.body.create_date = new Date();\r\n                _this.repository.insert(req.body)\r\n                    .then(function (insertID) { return res.status(201).jsonp({ id: insertID }); }, function (error) { return _this.handleError(error, res); });\r\n            }\r\n        });\r\n        this.put(RESTUrl + '/:id', function (req, res, next) {\r\n            _this.repository.update(req.body, req.params.id).then(function (changedRows) { return res.status(200).jsonp({ affectedRows: changedRows }); }, function (error) { return _this.handleError(error, res); });\r\n        });\r\n        this.delete(RESTUrl + '/:id', function (req, res, next) {\r\n            _this.repository.delete(req.params.id).then(function (changedRows) { return res.status(200).jsonp({ affectedRows: changedRows }); }, function (error) { return _this.handleError(error, res); });\r\n        });\r\n        this.post(RESTUrl + '/pagination', function (req, res, next) {\r\n            var paginationRequest = req.body;\r\n            var result = new paginationResponse_1.paginationResponse();\r\n            Q.all([\r\n                _this.repository.count(),\r\n                _this.repository.countAllLike(paginationRequest),\r\n                _this.repository.queryAllLike(paginationRequest)\r\n            ])\r\n                .spread(function (total, filtered, data) {\r\n                result.recordsTotal = total.count;\r\n                result.recordsFiltered = filtered.count;\r\n                result.data = data;\r\n                res.jsonp(result).end();\r\n            });\r\n        });\r\n    };\r\n    return baseCRUDController;\r\n}(baseController_1.baseController));\r\nexports.baseCRUDController = baseCRUDController;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar multer = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"multer\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\r\nvar baseController_1 = __webpack_require__(3);\r\nvar imageController = (function (_super) {\r\n    __extends(imageController, _super);\r\n    function imageController() {\r\n        var _this = _super.call(this) || this;\r\n        _this.uploadFolder = global.config.imagePath;\r\n        _this.initRouters();\r\n        return _this;\r\n    }\r\n    imageController.prototype.initRouters = function () {\r\n        var storage = multer.diskStorage({\r\n            destination: this.uploadFolder,\r\n            filename: function (req, file, cb) {\r\n                cb(null, file.originalname.split('.')[0] + '.' + Date.now() + '.' + file.originalname.split('.')[1]);\r\n            }\r\n        });\r\n        var upload = multer({ storage: storage });\r\n        this.router.post('/', upload.single(\"imageFile\"), function (req, res, next) {\r\n            var file = req.file;\r\n            if (file) {\r\n                res.jsonp({ success: true, filename: file.filename });\r\n            }\r\n            else {\r\n                res.status(400).jsonp({ message: \"upload failed, file[imageFile] not found in request!\" });\r\n            }\r\n        });\r\n    };\r\n    return imageController;\r\n}(baseController_1.baseController));\r\nexports.imageController = imageController;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar centralizedMySQL_1 = __webpack_require__(4);\r\nexports.centralizedMySQL = centralizedMySQL_1.centralizedMySQL;\r\nvar distributedMySQL_1 = __webpack_require__(5);\r\nexports.distributedMySQL = distributedMySQL_1.distributedMySQL;\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar pg = __webpack_require__(41);\r\nvar winston = __webpack_require__(0);\r\nvar serviceException_1 = __webpack_require__(2);\r\nvar PostgreSQLDB = (function () {\r\n    function PostgreSQLDB() {\r\n    }\r\n    PostgreSQLDB.prototype.createPool = function (cfg, name) {\r\n        var pool = new pg.Pool({\r\n            max: cfg.connectionLimit,\r\n            host: cfg.host,\r\n            database: cfg.database,\r\n            user: cfg.user,\r\n            password: cfg.password\r\n        });\r\n        winston.debug(\"PostgreSQL database(\" + name + \") at:\" + cfg.host + \" pool created.\");\r\n        return pool;\r\n    };\r\n    PostgreSQLDB.prototype.query = function (sql, param, defer, callback, meid) {\r\n        winston.debug('execute sql:' + sql);\r\n        winston.debug('with param:' + JSON.stringify(param));\r\n        this.getPool(meid).query(sql, param, function (err, rows) {\r\n            if (err) {\r\n                winston.error(\"while execute SQL: \" + sql);\r\n                winston.error(\"with params: \" + JSON.stringify(param));\r\n                winston.error(err.toString());\r\n                defer.reject(new serviceException_1.serviceException(\"ERR_DB\", err.toString()));\r\n            }\r\n            else {\r\n                if (callback) {\r\n                    callback(rows);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return PostgreSQLDB;\r\n}());\r\nexports.PostgreSQLDB = PostgreSQLDB;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar centralizedPostgreSQL_1 = __webpack_require__(8);\r\nexports.centralizedPostgreSQL = centralizedPostgreSQL_1.centralizedPostgreSQL;\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar baseDomainObject_1 = __webpack_require__(10);\r\nvar RESTEntity_1 = __webpack_require__(6);\r\nvar baseUser = (function (_super) {\r\n    __extends(baseUser, _super);\r\n    function baseUser() {\r\n        return _super.apply(this, arguments) || this;\r\n    }\r\n    return baseUser;\r\n}(baseDomainObject_1.baseDomainObject));\r\n__decorate([\r\n    RESTEntity_1.exportable(false),\r\n    __metadata(\"design:type\", String)\r\n], baseUser.prototype, \"password\", void 0);\r\nexports.baseUser = baseUser;\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar paginationRequest = (function () {\r\n    function paginationRequest() {\r\n        this.searchAllColumn = \"\";\r\n    }\r\n    return paginationRequest;\r\n}());\r\nexports.paginationRequest = paginationRequest;\r\nvar column = (function () {\r\n    function column() {\r\n        this.order = \"\";\r\n    }\r\n    return column;\r\n}());\r\nexports.column = column;\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar jwt = __webpack_require__(17);\r\nvar winston = __webpack_require__(0);\r\nvar Q = __webpack_require__(1);\r\nvar baseRepository_1 = __webpack_require__(12);\r\nvar encryption_1 = __webpack_require__(14);\r\nvar baseUserRepository = (function (_super) {\r\n    __extends(baseUserRepository, _super);\r\n    function baseUserRepository() {\r\n        return _super.apply(this, arguments) || this;\r\n    }\r\n    baseUserRepository.prototype.update = function (user, id) {\r\n        var defer = Q.defer();\r\n        var db = this.getDB(this.domainObject.getDBType());\r\n        if (user.password) {\r\n            user.password = encryption_1.encryption.encryptMd5(user.password);\r\n        }\r\n        db.query(\"update \" + this.domainObject.getTableName() + \" set ? where id=?\", [this.removeID(user), id], defer, function (result) {\r\n            defer.resolve(result.affectedRows);\r\n        });\r\n        return defer.promise;\r\n    };\r\n    baseUserRepository.prototype.login = function (username, password) {\r\n        var _this = this;\r\n        var encryptedPassword = encryption_1.encryption.encryptMd5(password);\r\n        var defer = Q.defer();\r\n        var pool = this.getDB(this.domainObject.getDBType());\r\n        pool.query(\"select * from \" + this.domainObject.getTableName() + \" where username=? and password=?\", [username, encryptedPassword], defer, function (result) {\r\n            if (result.length !== 1) {\r\n                defer.resolve(null);\r\n            }\r\n            else {\r\n                _this.postProcess(result[0]).then(function (user) {\r\n                    defer.resolve({ id: user.id, token: _this.generateJWT(user), detail: user });\r\n                });\r\n            }\r\n        });\r\n        return defer.promise;\r\n    };\r\n    baseUserRepository.prototype.changeNewPassword = function (newpassword, userid) {\r\n        var defer = Q.defer();\r\n        var pool = this.getDB(this.domainObject.getDBType());\r\n        var psw = encryption_1.encryption.encryptMd5(newpassword);\r\n        pool.query(\"update \" + this.domainObject.getTableName() + \" set password=? where id=?\", [psw, userid], defer, function (result) {\r\n            defer.resolve(result.affectedRows);\r\n        });\r\n        return defer.promise;\r\n    };\r\n    baseUserRepository.prototype.generateJWT = function (user) {\r\n        winston.debug(\"generate token for user[id:\" + user.id + \",username:\" + user.username + \",role:\" + user.role + \"]\");\r\n        var config = global.config;\r\n        return jwt.sign({\r\n            id: user.id,\r\n            username: user.username,\r\n            role: user.role\r\n        }, config.jwtSecKey, { expiresIn: config.jwtTimeout });\r\n    };\r\n    return baseUserRepository;\r\n}(baseRepository_1.baseRepository));\r\nexports.baseUserRepository = baseUserRepository;\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(18));\r\n__export(__webpack_require__(19));\r\n__export(__webpack_require__(20));\r\n__export(__webpack_require__(2));\r\n__export(__webpack_require__(22));\r\n__export(__webpack_require__(21));\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar MySqlAuthenticationService = (function () {\r\n    function MySqlAuthenticationService() {\r\n    }\r\n    MySqlAuthenticationService.getInstance = function () {\r\n        return MySqlAuthenticationService._instance;\r\n    };\r\n    MySqlAuthenticationService.prototype.login = function (username, password, userRepository) {\r\n        return userRepository.login(username, password);\r\n    };\r\n    return MySqlAuthenticationService;\r\n}());\r\nMySqlAuthenticationService._instance = new MySqlAuthenticationService();\r\nexports.MySqlAuthenticationService = MySqlAuthenticationService;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar Q = __webpack_require__(1);\r\nvar PAMAuthenticationService = (function () {\r\n    function PAMAuthenticationService() {\r\n    }\r\n    PAMAuthenticationService.getInstance = function () {\r\n        return PAMAuthenticationService._instance;\r\n    };\r\n    PAMAuthenticationService.prototype.login = function (username, password) {\r\n        return Q.resolve(null);\r\n    };\r\n    return PAMAuthenticationService;\r\n}());\r\nPAMAuthenticationService._instance = new PAMAuthenticationService();\r\nexports.PAMAuthenticationService = PAMAuthenticationService;\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar winston = __webpack_require__(0);\r\nvar JPushMessageService_1 = __webpack_require__(36);\r\nvar PAMAuthenticationService_1 = __webpack_require__(33);\r\nvar MySqlAuthenticationService_1 = __webpack_require__(32);\r\nvar WeChatMessageService_1 = __webpack_require__(38);\r\nvar SMSMessageService_1 = __webpack_require__(37);\r\nvar EmailMessageService_1 = __webpack_require__(35);\r\nvar serviceFactoryImpl = (function () {\r\n    function serviceFactoryImpl() {\r\n    }\r\n    serviceFactoryImpl.getInstance = function () {\r\n        return serviceFactoryImpl._instance;\r\n    };\r\n    serviceFactoryImpl.prototype.getMessageService = function (type) {\r\n        switch (type) {\r\n            case \"jpush\": {\r\n                return new JPushMessageService_1.JPushMessageService().getInstance();\r\n            }\r\n            case \"wechat\": {\r\n                return new WeChatMessageService_1.WeChatMessageService().getInstance();\r\n            }\r\n            case \"sms\": {\r\n                return new SMSMessageService_1.SMSMessageService().getInstance();\r\n            }\r\n            case \"email\": {\r\n                return new EmailMessageService_1.EmailMessageService().getInstance();\r\n            }\r\n        }\r\n    };\r\n    serviceFactoryImpl.prototype.getAuthenticationService = function () {\r\n        var config = global.config;\r\n        switch (config.loginType) {\r\n            case \"PAM\": {\r\n                winston.info(\"init PAM Authentication Service.\");\r\n                return PAMAuthenticationService_1.PAMAuthenticationService.getInstance();\r\n            }\r\n            case \"MySQL\": {\r\n                winston.info(\"init MySql Authentication Service.\");\r\n                return MySqlAuthenticationService_1.MySqlAuthenticationService.getInstance();\r\n            }\r\n            default: {\r\n                winston.error(\"invalid login service type[\" + config.loginType + \"]!\");\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    serviceFactoryImpl.prototype.getConfig = function () {\r\n        return serviceFactoryImpl._config;\r\n    };\r\n    serviceFactoryImpl.prototype.setConfig = function (config) {\r\n        serviceFactoryImpl._config = config;\r\n    };\r\n    return serviceFactoryImpl;\r\n}());\r\nserviceFactoryImpl._instance = new serviceFactoryImpl();\r\nexports.serviceFactoryImpl = serviceFactoryImpl;\r\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar winston = __webpack_require__(0);\r\nvar EmailMessageService = (function () {\r\n    function EmailMessageService() {\r\n    }\r\n    EmailMessageService.prototype.getInstance = function () {\r\n        return EmailMessageService._instance;\r\n    };\r\n    EmailMessageService.prototype.pushMessage = function (message) {\r\n        winston.info(\"send email.\");\r\n        return null;\r\n    };\r\n    return EmailMessageService;\r\n}());\r\nEmailMessageService._instance = new EmailMessageService();\r\nexports.EmailMessageService = EmailMessageService;\r\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar winston = __webpack_require__(0);\r\nvar JPushMessageService = (function () {\r\n    function JPushMessageService() {\r\n    }\r\n    JPushMessageService.prototype.getInstance = function () {\r\n        return JPushMessageService._instance;\r\n    };\r\n    JPushMessageService.prototype.pushMessage = function (message) {\r\n        winston.info(\"push message to App.\");\r\n        return null;\r\n    };\r\n    return JPushMessageService;\r\n}());\r\nJPushMessageService._instance = new JPushMessageService();\r\nexports.JPushMessageService = JPushMessageService;\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar winston = __webpack_require__(0);\r\nvar SMSMessageService = (function () {\r\n    function SMSMessageService() {\r\n    }\r\n    SMSMessageService.prototype.getInstance = function () {\r\n        return SMSMessageService._instance;\r\n    };\r\n    SMSMessageService.prototype.pushMessage = function (message) {\r\n        winston.info(\"send message to phone.\");\r\n        return null;\r\n    };\r\n    return SMSMessageService;\r\n}());\r\nSMSMessageService._instance = new SMSMessageService();\r\nexports.SMSMessageService = SMSMessageService;\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar winston = __webpack_require__(0);\r\nvar WeChatMessageService = (function () {\r\n    function WeChatMessageService() {\r\n    }\r\n    WeChatMessageService.prototype.getInstance = function () {\r\n        return WeChatMessageService._instance;\r\n    };\r\n    WeChatMessageService.prototype.pushMessage = function (message) {\r\n        winston.info(\"push message to Wechat.\");\r\n        return null;\r\n    };\r\n    return WeChatMessageService;\r\n}());\r\nWeChatMessageService._instance = new WeChatMessageService();\r\nexports.WeChatMessageService = WeChatMessageService;\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"express\");\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"mysql\");\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"pg\");\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"reflect-metadata\");\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// core.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2ce0195f9bd3ddb07404","module.exports = require(\"winston\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"winston\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"q\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"q\"\n// module id = 1\n// module chunks = 0","/**\r\n * Created by admin on 4/15/2016.\r\n */\r\n\r\n// import * as msgPool from '../../common/util/msgPool';\r\n// import {exceptionConfig} from \"./exceptionConfig\";\r\n\r\nexport class serviceException {\r\n    errCode: string;\r\n    message: string;\r\n    statusCode: number;\r\n    error: string;\r\n\r\n    constructor(_errCode: string, _error?: any, errorMessage?: string) {\r\n        this.errCode = _errCode;\r\n        let exceptionConfig = this.getMsgByCode(_errCode);\r\n        this.message = exceptionConfig.message;\r\n        this.statusCode = exceptionConfig.statusCode;\r\n        if (_error) {\r\n            this.error = _error.toString();\r\n        }\r\n        //allow override default message\r\n        if (errorMessage) {\r\n            this.message = errorMessage;\r\n        }\r\n    }\r\n\r\n    getMsgByCode(code: string): exceptionConfig {\r\n        let message = new exceptionConfig(\"Unknown Error\", 500);\r\n        if (messageConfig[code]) {\r\n            message = messageConfig[code];\r\n        }\r\n        return message;\r\n    }\r\n\r\n}\r\n\r\nexport class exceptionConfig {\r\n    message: string;\r\n    statusCode: number;\r\n\r\n    constructor(_message: string, _statusCode: number = 500) {\r\n        this.message = _message;\r\n        this.statusCode = _statusCode;\r\n    }\r\n}\r\n\r\nlet messageConfig = {\r\n    ERR_404: new exceptionConfig(\"Request not found!\", 404),\r\n    ERR_500: new exceptionConfig(\"Server Error!\", 500),\r\n    ERR_nologin: new exceptionConfig(\"Token Missing!\", 401),\r\n    ERR_relogin: new exceptionConfig(\"Token Timeout!\", 401),\r\n    WARNING_authFail: new exceptionConfig(\"Login Fail！\", 400),\r\n    ERR_401: new exceptionConfig(\"Permission Denied!\", 401),\r\n    ERR_DB: new exceptionConfig(\"Database failure!\", 500)\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/exception/serviceException.ts","/**\r\n * Created by Enix on 3/14/2016.\r\n */\r\nimport * as express from \"express\";\r\nimport * as jwt from \"jsonwebtoken\";\r\nimport * as winston from \"winston\";\r\nimport * as Q from \"q\";\r\nimport {serviceException} from \"../exception/serviceException\";\r\nimport {apiService} from \"../util/apiService\";\r\n\r\nexport abstract class baseController {\r\n    router: express.Router;\r\n\r\n    constructor() {\r\n        this.router = express.Router();\r\n    }\r\n\r\n    //abstract methods\r\n    abstract initRouters();\r\n\r\n    public getRouter() {\r\n        return this.router;\r\n    }\r\n\r\n    //authencation part\r\n    checkAuthentication(req, res, next) {\r\n        let auth = req.get('jwt');\r\n        if (!auth) {\r\n            winston.error('request without token, reject.');\r\n            this.handleError(new serviceException(\"ERR_nologin\"), res);\r\n        } else {\r\n            let config = global.config;\r\n            jwt.verify(auth, config.jwtSecKey, (err, decoded) => {\r\n                if (err) {\r\n                    winston.error(err.message);\r\n                    this.handleError(new serviceException(\"ERR_relogin\", err.message), res);\r\n                } else {\r\n                    winston.debug(\"user[\" + JSON.stringify(decoded) + \"] check token success\");\r\n                    next();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAuthentication(req): Q.Promise<any> {\r\n        let defer = Q.defer<any>();\r\n        let auth = req.get('jwt');\r\n        if (!auth) {\r\n            defer.reject(new serviceException(\"ERR_relogin\"));\r\n        } else {\r\n            let config = global.config;\r\n            jwt.verify(auth, config.jwtSecKey, (err, decoded) => {\r\n                if (err) {\r\n                    defer.reject(new serviceException(\"ERR_relogin\"));\r\n                } else {\r\n                    winston.debug(\"user from token:[\" + JSON.stringify(decoded) + \"]\");\r\n                    defer.resolve(decoded);\r\n                }\r\n            });\r\n        }\r\n        return defer.promise;\r\n    }\r\n\r\n    getAuthenticationSync(req) {\r\n        try {\r\n            let auth = req.get('jwt');\r\n            let config = global.config;\r\n            var decoded = jwt.verify(auth, config.jwtSecKey);\r\n            return decoded;\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    //common get post del put etc.\r\n    get(url: string, callback: (req, res, next) => void, withAuth: boolean = true) {\r\n        apiService.getInstance().push({method: 'get', url: url});\r\n        if (withAuth) {\r\n            this.router.get(url, this.checkAuthentication.bind(this), callback);\r\n        } else {\r\n            this.router.get(url, callback);\r\n        }\r\n    }\r\n\r\n    post(url: string, callback: (req, res, next) => void, withAuth: boolean = true) {\r\n        apiService.getInstance().push({method: 'post', url: url});\r\n        if (withAuth) {\r\n            this.router.post(url, this.checkAuthentication.bind(this), callback);\r\n        } else {\r\n            this.router.post(url, callback);\r\n        }\r\n    }\r\n\r\n    put(url: string, callback: (req, res, next) => void) {\r\n        apiService.getInstance().push({method: 'put', url: url});\r\n        this.router.put(url, this.checkAuthentication.bind(this), callback);\r\n    }\r\n\r\n    delete(url: string, callback: (req, res, next) => void) {\r\n        apiService.getInstance().push({method: 'delete', url: url});\r\n        this.router.delete(url, this.checkAuthentication.bind(this), callback);\r\n    }\r\n\r\n    //utils\r\n    handleError(error: any, res, req?) {\r\n        try {\r\n            res.status(error.statusCode).jsonp(error);\r\n            winston.error(`server error:${JSON.stringify(error)}`);\r\n        } catch (e) {\r\n            winston.error(`unknown server error:${error.stack}`);\r\n            res.status(500).jsonp({\r\n                \"errCode\": \"ERR_500\",\r\n                \"message\": \"Server error\",\r\n                \"statusCode\": 500,\r\n                \"error\": \"unknown Server error\"\r\n            });\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/controller/baseController.ts","/**\r\n * Created by Enix on 3/11/2016.\r\n */\r\nimport * as mysql from 'mysql';\r\nimport * as winston from 'winston';\r\nimport {MySQLDB} from \"./MySQLDB\";\r\n\r\nexport class centralizedMySQL extends MySQLDB {\r\n    pool: mysql.IPool;\r\n    private static _instance: centralizedMySQL = new centralizedMySQL();\r\n\r\n    constructor() {\r\n        super();\r\n        winston.info('init centralizedMySQL');\r\n        if (centralizedMySQL._instance) {\r\n            throw new Error(\"Error: Instantiation failed: Use getInstance() instead of new.\");\r\n        }\r\n        centralizedMySQL._instance = this;\r\n    }\r\n\r\n    public static getInstance(): centralizedMySQL {\r\n        return centralizedMySQL._instance;\r\n    }\r\n\r\n    public init() {\r\n        let config: any = global.config;\r\n        this.pool = this.createPool(config.centralizedDB, 'centralized');\r\n    }\r\n\r\n\r\n    getPool(param: any): mysql.IPool {\r\n        winston.debug(\"in database:[centralized]\");\r\n        return this.pool;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/db/MySQL/centralizedMySQL.ts","/**\r\n * Created by Enix on 3/11/2016.\r\n */\r\nimport * as mysql from \"mysql\";\r\nimport * as winston from \"winston\";\r\nimport {tools} from \"../../util/tools\";\r\nimport {MySQLDB} from \"./MySQLDB\";\r\n\r\nexport class distributedMySQL extends MySQLDB {\r\n    pools: Array<mysql.IPool> = [];\r\n    private static _instance: distributedMySQL = new distributedMySQL();\r\n\r\n    constructor() {\r\n        super();\r\n        winston.info('init distributedMySQL');\r\n        if (distributedMySQL._instance) {\r\n            throw new Error(\"Error: Instantiation failed: Use getInstance() instead of new.\");\r\n        }\r\n        distributedMySQL._instance = this;\r\n    }\r\n\r\n    public static getInstance(): distributedMySQL {\r\n        return distributedMySQL._instance;\r\n    }\r\n\r\n    public init() {\r\n        let config: any = global.config;\r\n        config.distributedDBs.map(\r\n            cfg => {\r\n                this.pools.push(this.createPool(cfg, 'distributed'));\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    getPool(indicator: any): mysql.IPool {\r\n        //if there is only one data db, just return that db\r\n        if (this.pools.length === 1) {\r\n            return this.pools[0];\r\n        }\r\n        if (!indicator) {\r\n            winston.error(\"Implementation Error: A query to distributed db should always give indicator\");\r\n            throw new Error(\"A query to distributed db should always give indicator\");\r\n        }\r\n        return this.getDBByIndicator(indicator);\r\n    }\r\n\r\n    getDBByIndicator(indicator: any) {\r\n        let dbHash = tools.getHash(indicator);\r\n        winston.debug(`in database:[distributed][${dbHash}]`);\r\n        return this.pools[dbHash];\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/db/MySQL/distributedMySQL.ts","/**\n * Created by enixjin on 5/12/16.\n */\nimport {dbType} from \"../../db/baseDB\";\nconst exportMetadataKey = Symbol(\"exportMetadataKey\");\nconst subQueryMetadataKey = Symbol(\"subQueryMetadataKey\");\nimport \"reflect-metadata\";\nimport {baseRepository} from \"../repository/baseRepository\";\n\nexport interface RESTEntityOption {\n    table: string;\n    URL: string;\n    db: dbType;\n}\n\nexport function RESTEntity(option: RESTEntityOption) {\n    return function decorator(target) {\n        target.prototype.getTableName = () => option.table;\n        target.prototype.getRESTUrl = () => option.URL;\n        target.prototype.getDBType = () => option.db;\n    };\n}\n\n//exportable\nexport function exportable(value: boolean) {\n    return Reflect.metadata(exportMetadataKey, value);\n}\n\nexport function getExportable(target: any, propertyKey: string) {\n    return Reflect.getMetadata(exportMetadataKey, target, propertyKey);\n}\n\n//subQuery\nexport function subQuery(value: {name: string, repository: typeof baseRepository}) {\n    return Reflect.metadata(subQueryMetadataKey, value);\n}\n\nexport function getSubQuery(target: any, propertyKey: string) {\n    return Reflect.getMetadata(subQueryMetadataKey, target, propertyKey);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/domain/decorator/RESTEntity.ts","/**\n * Created by enixjin on 12/20/16.\n */\nimport * as mysql from \"mysql\";\nimport * as winston from \"winston\";\nimport * as Q from \"q\";\nimport {serviceException} from \"../../exception/serviceException\";\nimport {baseDB} from \"../baseDB\";\nexport abstract class MySQLDB implements baseDB{\n    createPool(cfg, name): mysql.IPool{\n        let pool = mysql.createPool({\n            connectionLimit: cfg.connectionLimit,\n            host: cfg.host,\n            database: cfg.database,\n            user: cfg.user,\n            password: cfg.password,\n            dateStrings: true\n        });\n        winston.debug(\"MySQL database pool(\" + name + \") at:\" + cfg.host + \" created.\");\n        return pool;\n    }\n\n    abstract getPool(param: any): mysql.IPool;\n\n    abstract init();\n\n    public query(sql: string, param: any, defer: Q.Deferred<any>, callback: (rows: any) => void, meid?: string) {\n        winston.debug('execute sql:' + sql);\n        winston.debug('with param:' + JSON.stringify(param));\n        this.getPool(meid).query(sql, param, (err, rows) => {\n            if (err) {\n                winston.error(\"while execute SQL: \" + sql);\n                winston.error(\"with params: \" + JSON.stringify(param));\n                winston.error(err.toString());\n                defer.reject(new serviceException(\"ERR_DB\", err.toString()));\n            } else {\n                if (callback) {\n                    callback(rows);\n                }\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/MySQL/MySQLDB.ts","/**\r\n * Created by Enix on 3/11/2016.\r\n */\r\nimport * as pg from 'pg';\r\nimport * as winston from 'winston';\r\nimport {PostgreSQLDB} from \"./PostgreSQLDB\";\r\n\r\nexport class centralizedPostgreSQL extends PostgreSQLDB {\r\n    pool: pg.Pool;\r\n    private static _instance: centralizedPostgreSQL = new centralizedPostgreSQL();\r\n\r\n    constructor() {\r\n        super();\r\n        winston.info('init centralizedPostgreSQL');\r\n        if (centralizedPostgreSQL._instance) {\r\n            throw new Error(\"Error: Instantiation failed: Use getInstance() instead of new.\");\r\n        }\r\n        centralizedPostgreSQL._instance = this;\r\n    }\r\n\r\n    public static getInstance(): centralizedPostgreSQL {\r\n        return centralizedPostgreSQL._instance;\r\n    }\r\n\r\n    public init() {\r\n        let config: any = global.config;\r\n        this.pool = this.createPool(config.centralizedDB, 'centralized');\r\n    }\r\n\r\n\r\n    getPool(param: any): pg.Pool {\r\n        winston.debug(\"in database:[centralized]\");\r\n        return this.pool;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/db/PostgreSQLDB/centralizedPostgreSQL.ts","/**\r\n * Created by Enix on 3/11/2016.\r\n */\r\nimport * as mysql from \"mysql\";\r\nimport * as pg from \"pg\";\r\nimport * as Q from \"q\";\r\nimport {centralizedMySQL} from \"./MySQL/centralizedMySQL\";\r\nimport {distributedMySQL} from \"./MySQL/distributedMySQL\";\r\nimport {centralizedPostgreSQL} from \"./PostgreSQLDB/centralizedPostgreSQL\";\r\nexport interface baseDB {\r\n    createPool(cfg, name): mysql.IPool | pg.Pool;\r\n\r\n    getPool(param: any): mysql.IPool | pg.Pool;\r\n\r\n    init();\r\n\r\n    query(sql: string, param: any, defer: Q.Deferred<any>, callback: (rows: any) => void, indicator?: string);\r\n}\r\n\r\nexport function initDB(type: \"MySQL\"|\"PostgreSQL\") {\r\n    switch (type) {\r\n        case \"MySQL\":\r\n            centralizedMySQL.getInstance().init();\r\n            distributedMySQL.getInstance().init();\r\n        case \"PostgreSQL\":\r\n            centralizedPostgreSQL.getInstance().init();\r\n    }\r\n}\r\n\r\nexport enum dbType{\r\n    distributed, centralized\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/baseDB.ts","/**\r\n * Created by Enix on 3/14/2016.\r\n */\r\nimport {dbType} from \"../../db/baseDB\";\r\nexport abstract class baseDomainObject{\r\n    id:number;\r\n    create_date:Date;\r\n    update_date:Date;\r\n\r\n    getTableName():string {\r\n        throw new Error('table name of this object is not defined!');\r\n    }\r\n\r\n    getRESTUrl():string {\r\n        throw new Error('REST URL of this object is not defined!');\r\n    }\r\n\r\n    getDBType():dbType {\r\n        throw new Error('dbType of this object is not defined!');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/domain/entity/baseDomainObject.ts","/**\n * Created by enixjin on 4/18/16.\n */\nexport class paginationResponse{\n    recordsTotal:number;\n    recordsFiltered:number;\n    data = [];\n}\n\n\n// WEBPACK FOOTER //\n// ./src/domain/pagination/paginationResponse.ts","/**\r\n * Created by Enix on 3/15/2016.\r\n */\r\nimport * as Q from \"q\";\r\nimport {baseDomainObject} from \"../entity/baseDomainObject\";\r\nimport {dbType, baseDB} from \"../../db/baseDB\";\r\nimport {paginationRequest} from \"../pagination/paginationRequest\";\r\nimport {getExportable, getSubQuery} from \"../decorator/RESTEntity\";\r\nimport {centralizedMySQL} from \"../../db/MySQL/centralizedMySQL\";\r\nimport {distributedMySQL} from \"../../db/MySQL/distributedMySQL\";\r\nexport abstract class baseRepository<T extends baseDomainObject> {\r\n    domainObject: T;\r\n    centralizedDB: centralizedMySQL = centralizedMySQL.getInstance();\r\n    distributedDB: distributedMySQL = distributedMySQL.getInstance();\r\n\r\n    constructor(protected _domainObject) {\r\n        this.domainObject = new this._domainObject();\r\n    }\r\n\r\n    getDomainObject(): T {\r\n        return this.domainObject;\r\n    }\r\n\r\n    insert(objectToInsert: T, indicator?: string): Q.Promise<number> {\r\n        let defer = Q.defer<number>();\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\r\n            \"insert into \" + this.domainObject.getTableName() + \" set ?\",\r\n            objectToInsert,\r\n            defer,\r\n            (rows) => {\r\n                defer.resolve(rows.insertId);\r\n            }, indicator);\r\n        return defer.promise;\r\n    }\r\n\r\n    batchInsert(objectsToInsert: T[], indicator?: string): Q.Promise<number> {\r\n        let defer = Q.defer<number>();\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        let keys = Object.keys(objectsToInsert[0]);\r\n        let data = [];\r\n        objectsToInsert.forEach(\r\n            (domainObject) => {\r\n                let values = [];\r\n                keys.map((key => {\r\n                    values.push(domainObject[key]);\r\n                }));\r\n                data.push(values);\r\n            }\r\n        );\r\n        db.query(\r\n            \"insert into \" + this.domainObject.getTableName() + \" (\" + keys.join() + \") values ?\",\r\n            [data],\r\n            defer,\r\n            (rows) => {\r\n                defer.resolve(rows.affectedRows);\r\n            }, indicator);\r\n        return defer.promise;\r\n    }\r\n\r\n    queryByID(id: number, postProcess: boolean = true, indicator?: string): Q.Promise<T> {\r\n        let defer = Q.defer<T>();\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\r\n            \"select * from \" + this.domainObject.getTableName() + \" where id=?\",\r\n            [id],\r\n            defer,\r\n            (rows) => {\r\n                if (rows.length !== 1) {\r\n                    defer.resolve(null);\r\n                } else {\r\n                    if (postProcess) {\r\n                        this.postProcess(<T>rows[0]).then(defer.resolve);\r\n                    } else {\r\n                        defer.resolve(<T>rows[0]);\r\n                    }\r\n                }\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    listAll(postProcess: boolean = true, indicator?: string): Q.Promise<Array<T>> {\r\n        let defer = Q.defer<Array<T>>();\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\r\n            \"select * from \" + this.domainObject.getTableName() + \" order by id desc \",\r\n            [],\r\n            defer,\r\n            (rows) => {\r\n                if (postProcess) {\r\n                    Q.all<T>(rows.map(this.postProcess.bind(this))).then(values => {\r\n                        defer.resolve(rows);\r\n                    });\r\n                } else {\r\n                    defer.resolve(rows);\r\n                }\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    update(objectToUpdate: any, id: number, indicator?: string): Q.Promise<number> {\r\n        let defer = Q.defer<number>();\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\r\n            \"update \" + this.domainObject.getTableName() + \" set ? where id=?\",\r\n            [this.removeID(objectToUpdate), id],\r\n            defer,\r\n            (result) => {\r\n                defer.resolve(result.affectedRows);\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n\r\n    updateAndRefresh(objectToUpdate: any, id: number, indicator?: string): Q.Promise<T> {\r\n        return this.update(objectToUpdate, id, indicator).then(\r\n            () => {\r\n                return this.queryByID(id, true, indicator);\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    delete(id: number, indicator?: string): Q.Promise<number> {\r\n        let defer = Q.defer<number>();\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\r\n            \"delete from \" + this.domainObject.getTableName() + \" where id=?\",\r\n            [id],\r\n            defer,\r\n            (result) => {\r\n                defer.resolve(result.affectedRows);\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    batchDelete(query, indicator?: string): Q.Promise<number> {\r\n        let defer = Q.defer<number>();\r\n        let where = \" \";\r\n        let first = true;\r\n        let arg: Array<any> = [];\r\n        Object.keys(query).forEach((key) => {\r\n            if (first) {\r\n                where += \" where \" + key + this.getConditionKey(query[key]);\r\n                first = false;\r\n            } else {\r\n                where += \" and \" + key + this.getConditionKey(query[key]);\r\n            }\r\n            Array.prototype.push.apply(arg, this.getConditionArg(query[key]));\r\n        });\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\r\n            \"delete from \" + this.domainObject.getTableName() + where,\r\n            arg,\r\n            defer,\r\n            (result) => {\r\n                defer.resolve(result.affectedRows);\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    search(query, indicator?: string): Q.Promise<Array<T>> {\r\n        let defer = Q.defer<Array<T>>();\r\n        let where = \" \";\r\n        let first = true;\r\n        let arg: Array<any> = [];\r\n        Object.keys(query).forEach((key) => {\r\n            if (first) {\r\n                where += \" where \" + key + this.getConditionKey(query[key]);\r\n                first = false;\r\n            } else {\r\n                where += \" and \" + key + this.getConditionKey(query[key]);\r\n            }\r\n            Array.prototype.push.apply(arg, this.getConditionArg(query[key]));\r\n        });\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\r\n            \"select * from \" + this.domainObject.getTableName() + where + \" order by id desc \",\r\n            arg,\r\n            defer,\r\n            (rows) => {\r\n                Q.all<T>(rows.map(this.postProcess.bind(this))).then(() => {\r\n                    defer.resolve(rows);\r\n                });\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    searchLike(query, indicator?: string): Q.Promise<Array<T>> {\r\n        let defer = Q.defer<Array<T>>();\r\n        let where = \" \";\r\n        let first = true;\r\n        let arg: Array<any> = [];\r\n        Object.keys(query).forEach((key) => {\r\n            if (first) {\r\n                where += \" where \" + key + \" like ? \";\r\n                first = false;\r\n            } else {\r\n                where += \" and \" + key + \" like ? \";\r\n            }\r\n            arg.push('%' + query[key] + '%');\r\n        });\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\r\n            \"select * from \" + this.domainObject.getTableName() + where + \" order by id desc \",\r\n            arg,\r\n            defer,\r\n            (rows) => {\r\n                Q.all<T>(rows.map(this.postProcess.bind(this))).then(() => {\r\n                    defer.resolve(rows);\r\n                });\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    count(indicator?: string): Q.Promise<number> {\r\n        let defer = Q.defer<number>();\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n        db.query(\r\n            \"select count(1) as count from \" + this.domainObject.getTableName(),\r\n            [],\r\n            defer,\r\n            (result) => {\r\n                defer.resolve(result[0]);\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    countAllLike(paginationRequest: paginationRequest, indicator?: string) {\r\n        let defer = Q.defer<any>();\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n\r\n        let arg: Array<any> = [];\r\n        let where = \"\";\r\n\r\n        //search all columns\r\n        if (paginationRequest.searchAllColumn && paginationRequest.searchAllColumn.trim().length > 0) {\r\n            where = \" where (\";\r\n            let first = true;\r\n            for (let column of paginationRequest.columns) {\r\n                if (first) {\r\n                    first = false;\r\n                    where += column.name + \" like ?\";\r\n                } else {\r\n                    where += \" or \" + column.name + \" like ?\";\r\n                }\r\n                arg.push(\"%\" + paginationRequest.searchAllColumn + \"%\");\r\n            }\r\n            where += \") \";\r\n        }\r\n\r\n        db.query(\r\n            \"select count(1) as count from \" + this.domainObject.getTableName() + where,\r\n            arg,\r\n            defer,\r\n            (result) => {\r\n                defer.resolve(result[0]);\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    queryAllLike(paginationRequest: paginationRequest, indicator?: string) {\r\n        let defer = Q.defer<any>();\r\n        let db = this.getDB(this.domainObject.getDBType());\r\n\r\n        let arg: Array<any> = [];\r\n        let where = \"\";\r\n\r\n        //search all columns\r\n        if (paginationRequest.searchAllColumn && paginationRequest.searchAllColumn.trim().length > 0) {\r\n            where = \" where (\";\r\n            let first = true;\r\n            for (let column of paginationRequest.columns) {\r\n                if (first) {\r\n                    first = false;\r\n                    where += column.name + \" like ?\";\r\n                } else {\r\n                    where += \" or \" + column.name + \" like ?\";\r\n                }\r\n                arg.push(\"%\" + paginationRequest.searchAllColumn + \"%\");\r\n            }\r\n            where += \") \";\r\n        }\r\n\r\n        arg.push(paginationRequest.start);\r\n        arg.push(paginationRequest.length);\r\n        db.query(\r\n            \"select * from \" + this.domainObject.getTableName() + where + \" order by id desc \" + \" limit ?,?\",\r\n            arg,\r\n            defer,\r\n            (rows) => {\r\n                Q.all<T>(rows.map(this.postProcess.bind(this))).then(() => {\r\n                    defer.resolve(rows);\r\n                });\r\n            }, indicator\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    queryByCreateDate(startDate: Date, endDate: Date): Q.Promise<Array<baseDomainObject>> {\r\n        let defer = Q.defer<Array<baseDomainObject>>();\r\n        let pool = this.getDB(this.domainObject.getDBType());\r\n        pool.query(\r\n            \"select * from \" + this.domainObject.getTableName() + \" where create_date between ? and ?\" + \" order by id desc \",\r\n            [startDate, endDate],\r\n            defer,\r\n            (rows) => {\r\n                defer.resolve(rows);\r\n            }\r\n        );\r\n        return defer.promise;\r\n    }\r\n\r\n    //utils functions\r\n    protected getDB(type: dbType): baseDB {\r\n        if (type === dbType.distributed) {\r\n            return this.distributedDB;\r\n        } else if (type === dbType.centralized) {\r\n            return this.centralizedDB;\r\n        }\r\n    }\r\n\r\n    //update shall not contains id\r\n    removeID(objectToUpdate: T) {\r\n        if (objectToUpdate.id) {\r\n            delete objectToUpdate.id;\r\n        }\r\n        return objectToUpdate;\r\n    }\r\n\r\n\r\n    //post process to do something like not exportable column\r\n    postProcess(domain) {\r\n        return Q.all([this.removeNotExportable(domain), this.doSubQuery(domain)]).then(() => domain);\r\n    }\r\n\r\n    doSubQuery(domain) {\r\n        let defer = Q.defer();\r\n        let subQuerys = [];\r\n        for (let key in domain) {\r\n            if (getSubQuery(this.domainObject, key)) {\r\n                let handler = getSubQuery(this.domainObject, key);\r\n                if (domain[key]) {\r\n                    subQuerys.push(handler.repository.getInstance().queryByID(domain[key]).then(\r\n                        subObject => {\r\n                            domain[handler.name] = subObject;\r\n                            return domain;\r\n                        }\r\n                    ));\r\n                }\r\n            }\r\n        }\r\n        Q.all(subQuerys).then(() => defer.resolve(domain));\r\n        return defer.promise;\r\n    }\r\n\r\n    //process based on decorator\r\n    removeNotExportable(domain) {\r\n        let defer = Q.defer();\r\n        for (let key in domain) {\r\n            if (getExportable(this.domainObject, key) === false) {\r\n                delete domain[key];\r\n            }\r\n        }\r\n        defer.resolve(domain);\r\n        return defer.promise;\r\n    }\r\n\r\n    getFields(objectToInsert): Array < string > {\r\n        let result = [];\r\n        Object.getOwnPropertyNames(objectToInsert)\r\n            .forEach((field) => {\r\n                result.push(field);\r\n            });\r\n        return result;\r\n    }\r\n\r\n    getConditionKey(query: string): string {\r\n        if (query.toString().indexOf('{') >= 0) {\r\n            let result = \" in (\";\r\n            let first = true;\r\n            query.substring(query.indexOf('{') + 1, query.length - 1).split(\",\").forEach(\r\n                () => {\r\n                    if (first) {\r\n                        result += \"?\";\r\n                        first = false;\r\n                    } else {\r\n                        result += \",?\";\r\n                    }\r\n                }\r\n            );\r\n            return result + \") \"\r\n        } else {\r\n            return \"=? \";\r\n        }\r\n    }\r\n\r\n    getConditionArg(query: string): string[] {\r\n        if (query.toString().indexOf('{') == 0) {\r\n            let q = query.substring(query.indexOf('{') + 1, query.length - 1);\r\n            return q.split(\",\");\r\n        } else {\r\n            return [query];\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/domain/repository/baseRepository.ts","/**\n * Created by enixjin on 5/18/16.\n */\n\nimport {Subject} from \"@reactivex/rxjs\";\nimport * as winston from 'winston';\n\nexport class apiService {\n    apiSteam = new Subject<api>();\n\n    private static _instance: apiService = new apiService();\n\n    public static getInstance(): apiService {\n        return apiService._instance;\n    }\n\n    constructor() {\n        //TODO check why should winston be re initial here?\n        try {\n            winston.add(winston.transports.File, {\n                filename: 'log/log.lo',\n                json: false,\n                maxsize: 400000,\n                maxFiles: 10,\n                level: 'debug'\n            });\n            winston.remove(winston.transports.Console);\n            winston.add(winston.transports.Console, {\n                prettyPrint: true,\n                colorize: true,\n                silent: false,\n                timestamp: function () {\n                    return new Date().toLocaleString();\n                },\n                level: 'debug'\n            });\n        } catch (e) {\n            console.log(`a winston init err?${e}`);\n        }\n        winston.info(\"init api service\");\n        if (apiService._instance) {\n            throw new Error(\"Error: Instantiation failed: Use getInstance() instead of new.\");\n        }\n        apiService._instance = this;\n\n        this.apiSteam.subscribe(\n            info => {\n                winston.debug(`creating api on URL:{${info.method}}     ${info.url}`);\n            }\n        );\n    }\n\n    push(info: api) {\n        this.apiSteam.next(info);\n    }\n\n}\n\nexport interface api {\n    method: string;\n    url: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/apiService.ts","/**\n * Created by enixjin on 6/15/16.\n */\n\nexport namespace encryption {\n    let crypto = require('crypto');\n\n    let algorithm_aes128 = 'aes128';\n    let algorithm_rc4 = 'rc4';\n\n    export function encryptMd5(s:string):any {\n        s = s.toLowerCase().trim();\n        let md5 = crypto.createHash('md5');\n        md5.update(s);\n        return md5.digest('hex');\n    }\n\n    export function encryptRC4(content:Buffer|string) {\n        let config = global.config;\n        return cipher(algorithm_rc4, config.rc4_key, content, config.rc4_iv);\n    }\n\n    export function decryptRC4(content:Buffer|string) {\n        let config = global.config;\n        return decipher(algorithm_rc4, config.rc4_key, content, config.rc4_iv);\n    }\n\n    export function encryptAES128(key:Buffer|string, content:Buffer|string) {\n        let config = global.config;\n        return cipher(algorithm_aes128, key, content, config.aes128_iv);\n    }\n\n    export function decryptAES128(key:Buffer|string, content:Buffer|string) {\n        let config = global.config;\n        return decipher(algorithm_aes128, key, content, config.aes128_iv);\n    }\n\n    function cipher(algorithm, key:Buffer|string, content:Buffer|string, algorithm_iv:Buffer) {\n        key = getBuffer(key);\n        content = getBuffer(content);\n        let cip = crypto.createCipheriv(algorithm, key, algorithm_iv);\n        let encrypted = cip.update(content, 'hex', 'hex');\n        encrypted += cip.final('hex');\n        return encrypted.toString('hex');\n    }\n\n    function decipher(algorithm, key, content, algorithm_iv) {\n        key = getBuffer(key);\n        content = getBuffer(content);\n        let decipher = crypto.createDecipheriv(algorithm, key, algorithm_iv);\n        let decrypted = decipher.update(content, 'hex', 'hex');\n        decrypted += decipher.final('hex');\n        return decrypted.toString('hex');\n    }\n\n    function getBuffer(cont:Buffer|string):Buffer {\n        if (cont instanceof Buffer) {\n            return cont;\n        } else {\n            return new Buffer(cont, 'hex');\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/encryption.ts","/**\r\n * Created by Simon on 2016/4/7.\r\n */\r\nlet crypto = require('crypto');\r\n\r\nexport namespace tools {\r\n    const charsetNumber = '1234567890';\r\n\r\n    export function isEmptyObject(obj):boolean {\r\n        for (let key in obj) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    export function fillToLength(original, length:number):string {\r\n        let shex = original ? original.toString(16) : \"\";\r\n\r\n        if (shex.length > length * 2) {\r\n            throw new Error(\"Illegal data length in fillToLength(): \" + original + \".length > \" + length);\r\n        }\r\n\r\n        while (shex.length < length * 2) {\r\n            shex = '0' + shex;\r\n        }\r\n        return shex;\r\n    }\r\n\r\n    export function getHash(indicator:string):number {\r\n        let config = global.config;\r\n        let dbCount:number = config.distributedDBs.length;\r\n        let last = indicator.slice(-1);\r\n        if (isNaN(parseInt(last[0]))) {\r\n            return 0;\r\n        } else {\r\n            return <any>last[0] % dbCount;\r\n        }\r\n    }\r\n\r\n    export function getIpAddress(req) {\r\n        let ipAddress;\r\n        let headers = req.headers;\r\n        let forwardedIpsStr = headers['x-forwarded-for'];\r\n        forwardedIpsStr ? ipAddress = forwardedIpsStr : ipAddress = null;\r\n        if (!ipAddress) {\r\n            ipAddress = req.connection.remoteAddress ||\r\n                req.socket.remoteAddress ||\r\n                req.connection.socket.remoteAddress;\r\n        }\r\n        return ipAddress;\r\n    }\r\n\r\n    export function isErrorCountReset(first_time:any, minute:number) {\r\n        let flag = false;\r\n        let betweenTime = new Date().getTime() - first_time.getTime();\r\n        if (betweenTime > (1000 * 60 * minute)) {\r\n            flag = true;\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    export function generateRandomNumber(length:number) {\r\n        return generateRandom(length, charsetNumber);\r\n    }\r\n\r\n    function generateRandom(length:number, charset:string):string {\r\n        let result = '';\r\n        while (result.length < length) {\r\n            let bf;\r\n            try {\r\n                bf = crypto.randomBytes(length);\r\n            }\r\n            catch (e) {\r\n                continue;\r\n            }\r\n            for (let i = 0; i < bf.length; i++) {\r\n                let index = bf.readUInt8(i) % charset.length;\r\n                result += charset.charAt(index);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/tools.ts","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 17\n// module chunks = 0","/**\n * Created by enixjin on 6/2/16.\n */\n\nexport {baseController} from \"./baseController\";\nexport {baseCRUDController} from \"./baseCRUDController\";\nexport {imageController} from \"./imageController\";\n\n\n// WEBPACK FOOTER //\n// ./src/controller/main.ts","/**\n * Created by enixjin on 6/2/16.\n */\n\nexport {baseDB, dbType, initDB} from \"./baseDB\";\nexport * from \"./MySQL/main\";\nexport * from \"./PostgreSQLDB/main\";\n\n\n// WEBPACK FOOTER //\n// ./src/db/main.ts","/**\n * Created by enixjin on 6/2/16.\n */\n\nexport * from \"./decorator/RESTEntity\";\nexport * from \"./entity/baseDomainObject\";\nexport * from \"./pagination/paginationRequest\";\nexport * from \"./pagination/paginationResponse\";\nexport * from \"./repository/baseRepository\";\n\n//baseUser\nexport * from \"./entity/baseUser\";\nexport * from \"./repository/baseUserRepository\";\n\n\n// WEBPACK FOOTER //\n// ./src/domain/main.ts","/**\n * Created by enixjin on 12/30/16.\n */\n\nexport * from \"./serviceFactory\";\nexport * from \"./impl/serviceFactoryImpl\";\nexport * from \"./authenticate/authenticateService\";\nexport * from \"./message/messageService\";\n\n\n// WEBPACK FOOTER //\n// ./src/service/main.ts","/**\n * Created by enixjin on 12/13/16.\n */\nexport * from \"./tools\";\nexport * from \"./apiService\";\nexport * from \"./encryption\"\n\n\n// WEBPACK FOOTER //\n// ./src/util/main.ts","/**\n * Created by enixjin on 3/21/16.\n */\n\nimport {baseController} from \"./baseController\";\nimport {baseRepository} from \"../domain/repository/baseRepository\";\nimport {baseDomainObject} from \"../domain/entity/baseDomainObject\";\nimport {paginationRequest} from \"../domain/pagination/paginationRequest\";\nimport {paginationResponse} from \"../domain/pagination/paginationResponse\";\nimport * as Q from \"q\";\n\nexport abstract class baseCRUDController<R extends baseDomainObject, T extends baseRepository<R>> extends baseController {\n    repository: T;\n\n    constructor(protected _domainObject, protected _repository) {\n        super();\n        this.repository = _repository.getInstance();\n        //allow override default crud methods\n        this.initRouters();\n        this.createCRUD();\n    }\n\n    //common CRUD for domian objects\n    createCRUD() {\n        let domainObject = new this._domainObject();\n        let RESTUrl = domainObject.getRESTUrl();\n        // winston.info(\"generating CRUD for:\" + RESTUrl);\n        //get List\n        this.get(RESTUrl, (req, res, next) => {\n            this.repository.listAll().then(\n                (rows) => res.status(200).jsonp(rows),\n                (error) => this.handleError(error, res)\n            );\n        });\n        //search\n        this.get(RESTUrl + '/search', (req, res, next) => {\n            this.repository.search(req.query).then(\n                (rows) => res.status(200).jsonp(rows),\n                (error) => this.handleError(error, res)\n            );\n        });\n\n        //search like\n        this.get(RESTUrl + '/search/like', (req, res, next) => {\n            this.repository.searchLike(req.query).then(\n                (rows) => res.status(200).jsonp(rows),\n                (error) => this.handleError(error, res)\n            );\n        });\n\n        this.get(RESTUrl + '/incremental', (req, res, next) => {\n            this.repository\n                .queryByCreateDate(req.query.startDate, req.query.endDate)\n                .then(\n                    (result) => res.status(200).jsonp(result),\n                    (error) => this.handleError(error, res)\n                );\n        });\n\n        //get by id\n        this.get(RESTUrl + '/:id', (req, res, next) => {\n            this.repository.queryByID(req.params.id).then(\n                (result) => {\n                    if (result) {\n                        res.status(200).jsonp(result);\n                    } else {\n                        res.status(204).jsonp({});\n                    }\n                },\n                (error) => this.handleError(error, res)\n            );\n        });\n        //create\n        this.post(RESTUrl, (req, res, next) => {\n            if (Array.isArray(req.body)) {\n                this.repository.batchInsert(req.body).then(\n                    (insertID) => res.status(201).jsonp({affectedRows: insertID}),\n                    (error) => this.handleError(error, res)\n                );\n            } else {\n                req.body.create_date = new Date();\n                this.repository.insert(req.body)\n                    .then(\n                        (insertID) => res.status(201).jsonp({id: insertID}),\n                        (error) => this.handleError(error, res)\n                    );\n            }\n        });\n        //update\n        this.put(RESTUrl + '/:id', (req, res, next) => {\n            this.repository.update(req.body, req.params.id).then(\n                (changedRows) => res.status(200).jsonp({affectedRows: changedRows}),\n                (error) => this.handleError(error, res)\n            );\n        });\n        //delete\n        this.delete(RESTUrl + '/:id', (req, res, next) => {\n            this.repository.delete(req.params.id).then(\n                (changedRows) => res.status(200).jsonp({affectedRows: changedRows}),\n                (error) => this.handleError(error, res)\n            );\n        });\n\n        this.post(RESTUrl + '/pagination', (req, res, next) => {\n            let paginationRequest = <paginationRequest>req.body;\n            let result = new paginationResponse();\n            Q.all([\n                this.repository.count(),\n                this.repository.countAllLike(paginationRequest),\n                this.repository.queryAllLike(paginationRequest)\n            ])\n                .spread(\n                    (total, filtered, data) => {\n                        result.recordsTotal = total.count;\n                        result.recordsFiltered = filtered.count;\n                        result.data = data;\n                        res.jsonp(result).end();\n                    }\n                );\n        });\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/controller/baseCRUDController.ts","/**\n * Created by enixjin on 02/22/17.\n */\nimport * as multer from \"multer\";\nimport {baseController} from \"./baseController\";\n\nexport class imageController extends baseController {\n    /**\n     * add following line to your app.js to view upload image\n     * app.use('/upload', [new imageController().getRouter()]);\n     * app.use('/image', express.static(global.config.imagePath));\n     **/\n    private uploadFolder: string = global.config.imagePath;\n\n    constructor() {\n        super();\n        this.initRouters();\n    }\n\n    initRouters() {\n        let storage = multer.diskStorage({\n            destination: this.uploadFolder,\n            filename: function (req, file, cb) {\n                cb(null, file.originalname.split('.')[0] + '.' + Date.now() + '.' + file.originalname.split('.')[1]);\n            }\n        });\n        let upload = multer({storage: storage});\n        //upload single image\n        this.router.post('/', upload.single(\"imageFile\"), (req, res, next) => {\n            let file = req.file;\n            if (file) {\n                res.jsonp({success: true, filename: file.filename});\n            } else {\n                res.status(400).jsonp({message: \"upload failed, file[imageFile] not found in request!\"});\n            }\n        });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/controller/imageController.ts","/**\n * Created by enixjin on 12/20/16.\n */\nexport {centralizedMySQL} from \"./centralizedMySQL\";\nexport {distributedMySQL} from \"./distributedMySQL\";\n\n\n// WEBPACK FOOTER //\n// ./src/db/MySQL/main.ts","/**\n * Created by enixjin on 12/20/16.\n */\nimport * as pg from \"pg\";\nimport * as winston from \"winston\";\nimport * as Q from \"q\";\nimport {serviceException} from \"../../exception/serviceException\";\nimport {baseDB} from \"../baseDB\";\nexport abstract class PostgreSQLDB implements baseDB {\n    createPool(cfg, name): pg.Pool {\n        let pool = new pg.Pool({\n            max: cfg.connectionLimit,\n            host: cfg.host,\n            database: cfg.database,\n            user: cfg.user,\n            password: cfg.password\n        });\n        winston.debug(\"PostgreSQL database(\" + name + \") at:\" + cfg.host + \" pool created.\");\n        return pool;\n    }\n\n    abstract getPool(param: any): pg.Pool;\n\n    abstract init();\n\n    public query(sql: string, param: any, defer: Q.Deferred<any>, callback: (rows: any) => void, meid?: string) {\n        winston.debug('execute sql:' + sql);\n        winston.debug('with param:' + JSON.stringify(param));\n        this.getPool(meid).query(sql, param, (err, rows) => {\n            if (err) {\n                winston.error(\"while execute SQL: \" + sql);\n                winston.error(\"with params: \" + JSON.stringify(param));\n                winston.error(err.toString());\n                defer.reject(new serviceException(\"ERR_DB\", err.toString()));\n            } else {\n                if (callback) {\n                    callback(rows);\n                }\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/PostgreSQLDB/PostgreSQLDB.ts","/**\n * Created by enixjin on 12/20/16.\n */\n\nexport {centralizedPostgreSQL} from \"./centralizedPostgreSQL\";\n\n\n// WEBPACK FOOTER //\n// ./src/db/PostgreSQLDB/main.ts","/**\n * Created by enixjin on 12/13/16.\n */\nimport {baseDomainObject} from \"./baseDomainObject\";\nimport {exportable} from \"../decorator/RESTEntity\";\n\nexport abstract class baseUser extends baseDomainObject {\n    username: string;\n\n    @exportable(false)\n    password: string;\n\n    role: number;\n\n    //WARNNING: sub query should be carefully used to avoid entity infinite load each other\n    //@subQuery will call xxxRepository's queryByID method to fetch entity, if not found return null.\n\n    // @subQuery({name: \"group\", repository: groupRepository})\n    // group_id: number;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/domain/entity/baseUser.ts","/**\n * Created by enixjin on 4/18/16.\n */\n\nexport class paginationRequest {\n    start: number;\n    length: number;\n    searchAllColumn: string = \"\";\n    columns: [column];\n}\n\nexport class column {\n    name: string;\n    value: string;\n    search: string;\n    order: string = \"\";\n}\n\n\n// WEBPACK FOOTER //\n// ./src/domain/pagination/paginationRequest.ts","/**\n * Created by enixjin on 12/13/16.\n */\nimport * as jwt from \"jsonwebtoken\";\nimport * as winston from \"winston\";\nimport * as Q from \"q\";\nimport {baseRepository} from \"./baseRepository\";\nimport {encryption} from \"../../util/encryption\";\nimport {baseUser} from \"../entity/baseUser\";\n\nexport abstract class baseUserRepository<T extends baseUser> extends baseRepository<T> {\n\n    update(user: T, id: number): Q.Promise<number> {\n        let defer = Q.defer<number>();\n        let db = this.getDB(this.domainObject.getDBType());\n        if (user.password) {\n            user.password = encryption.encryptMd5(user.password);\n        }\n        db.query(\n            \"update \" + this.domainObject.getTableName() + \" set ? where id=?\",\n            [this.removeID(user), id],\n            defer,\n            (result) => {\n                defer.resolve(result.affectedRows);\n            }\n        );\n        return defer.promise;\n    }\n\n    login(username: string, password: string): Q.Promise<any> {\n        let encryptedPassword = encryption.encryptMd5(password);\n        let defer = Q.defer<any>();\n        let pool = this.getDB(this.domainObject.getDBType());\n        pool.query(\n            \"select * from \" + this.domainObject.getTableName() + \" where username=? and password=?\",\n            [username, encryptedPassword],\n            defer,\n            (result) => {\n                if (result.length !== 1) {\n                    defer.resolve(null);\n                } else {\n                    this.postProcess(result[0]).then(\n                        user => {\n                            defer.resolve({id: user.id, token: this.generateJWT(user), detail: user});\n                        }\n                    );\n                }\n            }\n        );\n        return defer.promise;\n    }\n\n    changeNewPassword(newpassword: string, userid: any) {\n        let defer = Q.defer<any>();\n        let pool = this.getDB(this.domainObject.getDBType());\n        let psw = encryption.encryptMd5(newpassword);\n        pool.query(\n            \"update \" + this.domainObject.getTableName() + \" set password=? where id=?\",\n            [psw, userid],\n            defer,\n            (result) => {\n                defer.resolve(result.affectedRows);\n            }\n        );\n        return defer.promise;\n    }\n\n    generateJWT(user: T) {\n        winston.debug(\"generate token for user[id:\" + user.id + \",username:\" + user.username + \",role:\" + user.role + \"]\");\n        let config = global.config;\n        return jwt.sign({\n            id: user.id,\n            username: user.username,\n            role: user.role\n        }, config.jwtSecKey, {expiresIn: config.jwtTimeout});\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/domain/repository/baseUserRepository.ts","/**\n * Created by enixjin on 12/13/16.\n */\nexport * from \"./controller/main\";\nexport * from \"./db/main\";\nexport * from \"./domain/main\";\nexport * from \"./exception/serviceException\";\nexport * from \"./util/main\";\nexport * from \"./service/main\";\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","/**\n * Created by enixjin on 16-12-29.\n */\nimport {authenticationService} from \"../authenticateService\";\nimport * as Q from \"q\";\nimport {baseUserRepository} from \"../../../domain/repository/baseUserRepository\";\nimport {baseUser} from \"../../../domain/entity/baseUser\";\n\nexport class MySqlAuthenticationService implements authenticationService {\n    private static _instance: MySqlAuthenticationService = new MySqlAuthenticationService();\n\n    public static getInstance(): MySqlAuthenticationService {\n        return MySqlAuthenticationService._instance;\n    }\n\n    login<T extends baseUserRepository<U>,U extends baseUser>(username: string, password: string, userRepository: T): Q.Promise<any> {\n        return userRepository.login(username, password);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/authenticate/impl/MySqlAuthenticationService.ts","/**\n * Created by enixjin on 16-12-29.\n */\nimport {authenticationService} from \"../authenticateService\";\nimport * as Q from \"q\";\n//import * as pam from \"authenticate-pam\";\n\nexport class PAMAuthenticationService implements authenticationService {\n    private static _instance: PAMAuthenticationService = new PAMAuthenticationService();\n\n    public static getInstance(): PAMAuthenticationService {\n        return PAMAuthenticationService._instance;\n    }\n\n    login(username: string, password: string): Q.Promise<any> {\n        /*\n         pam.authenticate('username', 'password', function(err) {\n         if(err) {\n         return null;\n         }\n         else {\n         winston.info(\"PAM Authenticated!\");\n         return new User(username);\n         }\n         });\n         */\n        return Q.resolve(null);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/authenticate/impl/PAMAuthenticationService.ts","/**\n * Created by enixjin on 16-12-29.\n */\nimport {serviceFactory} from \"../serviceFactory\";\nimport * as winston from \"winston\";\nimport {JPushMessageService} from \"../message/impl/JPushMessageService\";\nimport {messageService} from \"../message/messageService\";\nimport {authenticationService} from \"../authenticate/authenticateService\";\nimport {PAMAuthenticationService} from \"../authenticate/impl/PAMAuthenticationService\";\nimport {MySqlAuthenticationService} from \"../authenticate/impl/MySqlAuthenticationService\";\nimport {WeChatMessageService} from \"../message/impl/WeChatMessageService\";\nimport {SMSMessageService} from \"../message/impl/SMSMessageService\";\nimport {EmailMessageService} from \"../message/impl/EmailMessageService\";\nexport class serviceFactoryImpl implements serviceFactory {\n    private static _instance: serviceFactoryImpl = new serviceFactoryImpl();\n    private static _config;\n\n    public static getInstance(): serviceFactory {\n        return serviceFactoryImpl._instance;\n    }\n\n    getMessageService(type: \"jpush\"|\"wechat\"|\"sms\"|\"email\"): messageService {\n        switch (type) {\n            case \"jpush\" : {\n                return new JPushMessageService().getInstance();\n            }\n            case \"wechat\" : {\n                return new WeChatMessageService().getInstance();\n            }\n            case \"sms\" : {\n                return new SMSMessageService().getInstance();\n            }\n            case \"email\" : {\n                return new EmailMessageService().getInstance();\n            }\n        }\n    }\n\n    getAuthenticationService(): authenticationService {\n        let config = global.config;\n        switch (config.loginType) {\n            case \"PAM\" : {\n                winston.info(\"init PAM Authentication Service.\");\n                return PAMAuthenticationService.getInstance();\n            }\n            case \"MySQL\" : {\n                winston.info(\"init MySql Authentication Service.\");\n                return MySqlAuthenticationService.getInstance();\n            }\n            default : {\n                winston.error(`invalid login service type[${config.loginType}]!`);\n                return null;\n            }\n        }\n    }\n\n    getConfig(): any {\n        return serviceFactoryImpl._config;\n    }\n\n    setConfig(config: any) {\n        serviceFactoryImpl._config = config;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/impl/serviceFactoryImpl.ts","/**\n * Created by enixjin on 16-12-29.\n */\nimport {messageService} from \"../messageService\";\nimport * as winston from \"winston\";\n\nexport class EmailMessageService implements messageService {\n    private static _instance: EmailMessageService = new EmailMessageService();\n\n    public getInstance(): EmailMessageService {\n        return EmailMessageService._instance;\n    }\n\n    pushMessage(message: any): boolean {\n        //TBD\n        winston.info(\"send email.\");\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/message/impl/EmailMessageService.ts","/**\n * Created by enixjin on 16-12-29.\n */\nimport {messageService} from \"../messageService\";\nimport * as winston from \"winston\";\n\nexport class JPushMessageService implements messageService {\n    private static _instance : JPushMessageService = new JPushMessageService();\n    public getInstance() : JPushMessageService {\n        return JPushMessageService._instance;\n    }\n    pushMessage(message: any): boolean {\n        //TBD\n        winston.info(\"push message to App.\");\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/message/impl/JPushMessageService.ts","/**\n * Created by enixjin on 16-12-29.\n */\nimport {messageService} from \"../messageService\";\nimport * as winston from \"winston\";\n\nexport class SMSMessageService implements messageService {\n    private static _instance : SMSMessageService = new SMSMessageService();\n    public getInstance() : SMSMessageService {\n        return SMSMessageService._instance;\n    }\n    pushMessage(message: any): boolean {\n        //TBD\n        winston.info(\"send message to phone.\");\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/message/impl/SMSMessageService.ts","/**\n * Created by enixjin on 16-12-29.\n */\nimport {messageService} from \"../messageService\";\nimport * as winston from \"winston\";\n\nexport class WeChatMessageService implements messageService {\n    private static _instance : WeChatMessageService = new WeChatMessageService();\n    public getInstance() : WeChatMessageService {\n        return WeChatMessageService._instance;\n    }\n    pushMessage(message: any): boolean {\n        //TBD\n        winston.info(\"push message to Wechat.\");\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/message/impl/WeChatMessageService.ts","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 39\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 40\n// module chunks = 0","module.exports = require(\"pg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pg\"\n// module id = 41\n// module chunks = 0","module.exports = require(\"reflect-metadata\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"reflect-metadata\"\n// module id = 42\n// module chunks = 0"],"sourceRoot":""}